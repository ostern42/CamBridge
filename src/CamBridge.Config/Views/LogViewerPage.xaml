<!-- src/CamBridge.Config/Views/LogViewerPage.xaml -->
<!-- Version: 0.8.21 -->
<!-- Description: BEAUTIFUL LogViewer with Multi-File status display -->
<!-- Copyright: © 2025 Claude's Improbably Reliable Software Solutions -->

<Page x:Class="CamBridge.Config.Views.LogViewerPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:conv="clr-namespace:CamBridge.Config.Converters"
      xmlns:models="clr-namespace:CamBridge.Config.Models"
      mc:Ignorable="d" 
      d:DesignHeight="800" d:DesignWidth="1200"
      Title="Log Viewer">

    <Page.Resources>
        <conv:BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <conv:InverseBooleanToVisibilityConverter x:Key="InverseBoolToVisibility"/>
        <conv:GreaterThanZeroConverter x:Key="GreaterThanZero"/>
        <conv:StatusToColorConverter x:Key="StatusToColor"/>
        <conv:ExpandIconConverter x:Key="ExpandIcon"/>
        <conv:StageToColorConverter x:Key="StageToColor"/>
        <conv:StageToIconConverter x:Key="StageToIcon"/>

        <!-- Beautiful gradients -->
        <LinearGradientBrush x:Key="HeaderGradient" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FAFAFA" Offset="0"/>
            <GradientStop Color="#F5F5F5" Offset="1"/>
        </LinearGradientBrush>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Beautiful Header -->
        <Border Grid.Row="0" Background="{StaticResource HeaderGradient}" 
                BorderBrush="#E0E0E0" BorderThickness="0,0,0,1">
            <Grid Margin="16,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Title Row with Actions -->
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                        <TextBlock Text="📋" FontSize="20" VerticalAlignment="Center" Margin="0,0,8,0"/>
                        <TextBlock Text="Log Viewer" FontSize="20" FontWeight="Medium" 
                                   VerticalAlignment="Center"/>
                    </StackPanel>

                    <!-- Action Buttons -->
                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                        <!-- Tree Controls (only visible in tree mode) -->
                        <StackPanel Orientation="Horizontal" Margin="0,0,8,0"
                                    Visibility="{Binding IsTreeViewEnabled, Converter={StaticResource BoolToVisibility}}">
                            <Button Content="Expand All" Command="{Binding ExpandAllCommand}" 
                                    Height="26" Padding="8,0" Margin="0,0,4,0" FontSize="11"/>
                            <Button Content="Collapse All" Command="{Binding CollapseAllCommand}" 
                                    Height="26" Padding="8,0" Margin="0,0,8,0" FontSize="11"/>
                        </StackPanel>

                        <!-- View Toggle -->
                        <ToggleButton IsChecked="{Binding IsTreeViewEnabled}" 
                                      Height="26" Padding="8,0" ToolTip="Toggle Tree/Flat View" Margin="0,0,4,0">
                            <TextBlock FontSize="12">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsTreeViewEnabled}" Value="True">
                                                <Setter Property="Text" Value="🌳 Tree"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsTreeViewEnabled}" Value="False">
                                                <Setter Property="Text" Value="📃 Flat"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </ToggleButton>

                        <!-- Refresh -->
                        <Button Command="{Binding RefreshCommand}" ToolTip="Refresh Logs"
                                Height="26" Padding="8,0" Margin="0,0,4,0">
                            <TextBlock Text="🔄 Refresh" FontSize="12"/>
                        </Button>

                        <!-- Auto Refresh Toggle -->
                        <ToggleButton IsChecked="{Binding IsAutoScrollEnabled}" 
                                      Height="26" Padding="8,0" ToolTip="Auto-refresh every 10 seconds">
                            <TextBlock Text="🔄 Auto" FontSize="12"/>
                        </ToggleButton>
                    </StackPanel>
                </Grid>

                <!-- Pipeline Selection Row - FIXED LAYOUT -->
                <Grid Grid.Row="1" Margin="0,8,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="350"/>
                        <!-- Increased from 250 -->
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="240"/>
                        <!-- Increased from 180 -->
                        <ColumnDefinition Width="240"/>
                        <!-- Increased from 180 -->
                        <ColumnDefinition Width="240"/>
                        <!-- Increased from 180 -->
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Pipelines:" VerticalAlignment="Center" 
                               Margin="0,0,8,0" FontSize="12" FontWeight="Medium"/>

                    <ComboBox Grid.Column="1" Height="26" MaxDropDownHeight="400"
                              ItemsSource="{Binding PipelineSelections}"
                              Text="{Binding PipelineSelectionText, Mode=OneWay}"
                              IsEditable="True"
                              IsReadOnly="True"
                              FontSize="11">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsSelected}" 
                                          Content="{Binding Name}" 
                                          FontSize="11"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>

                    <TextBlock Grid.Column="2" Text="Search:" VerticalAlignment="Center" 
                               Margin="16,0,8,0" FontSize="12" FontWeight="Medium"/>

                    <!-- Search Boxes - better spacing and width -->
                    <ComboBox Grid.Column="3" 
                              Text="{Binding Filter1, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding Filter1History}"
                              IsEditable="True"
                              Height="26"
                              Margin="0,0,4,0"
                              FontSize="11"
                              Tag="1"
                              KeyDown="SearchBox_KeyDown"
                              LostFocus="Filter1_LostFocus">
                        <ComboBox.Resources>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="FontStyle" Value="Italic"/>
                                <Setter Property="Opacity" Value="0.8"/>
                            </Style>
                        </ComboBox.Resources>
                    </ComboBox>

                    <ComboBox Grid.Column="4" 
                              Text="{Binding Filter2, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding Filter2History}"
                              IsEditable="True"
                              Height="26"
                              Margin="0,0,4,0"
                              FontSize="11"
                              Tag="2"
                              KeyDown="SearchBox_KeyDown"
                              LostFocus="Filter2_LostFocus"/>

                    <ComboBox Grid.Column="5" 
                              Text="{Binding Filter3, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding Filter3History}"
                              IsEditable="True"
                              Height="26"
                              Margin="0,0,8,0"
                              FontSize="11"
                              Tag="3"
                              KeyDown="SearchBox_KeyDown"
                              LostFocus="Filter3_LostFocus"/>

                    <Button Grid.Column="6" Content="✗ Clear" Command="{Binding ClearFiltersCommand}" 
                            Height="26" Padding="12,0" FontSize="11"/>
                </Grid>

                <!-- Date Range Selection WITH Level Filter Dropdown -->
                <Grid Grid.Row="2" Margin="0,8,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="140"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="140"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="150"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="📅 Date Range:" VerticalAlignment="Center" 
                               Margin="0,0,8,0" FontSize="12" FontWeight="Medium"/>

                    <DatePicker Grid.Column="1" 
                                SelectedDate="{Binding StartDate}"
                                FontSize="11"
                                Height="26"
                                Margin="0,0,4,0"
                                ToolTip="Start date (inclusive)"/>

                    <TextBlock Grid.Column="2" Text="→" VerticalAlignment="Center" 
                               Margin="4,0" FontSize="12"/>

                    <DatePicker Grid.Column="3" 
                                SelectedDate="{Binding EndDate}"
                                FontSize="11"
                                Height="26"
                                Margin="0,0,8,0"
                                ToolTip="End date (inclusive)"/>

                    <!-- Quick Range Buttons with Icons -->
                    <StackPanel Grid.Column="4" Orientation="Horizontal" Margin="8,0,0,0">
                        <Button Content="📅 Today" Command="{Binding SetTodayCommand}" 
                                Height="26" Padding="8,0" Margin="0,0,4,0" FontSize="10"/>
                        <Button Content="📆 Week" Command="{Binding SetLastWeekCommand}" 
                                Height="26" Padding="8,0" Margin="0,0,4,0" FontSize="10"/>
                        <Button Content="🗓 Month" Command="{Binding SetLastMonthCommand}" 
                                Height="26" Padding="8,0" Margin="0,0,4,0" FontSize="10"/>
                        <Button Content="✗" Command="{Binding ClearDateRangeCommand}" 
                                Height="26" Padding="8,0" FontSize="10" ToolTip="Clear date range"/>
                    </StackPanel>

                    <!-- Spacer -->
                    <Grid Grid.Column="6"/>

                    <TextBlock Grid.Column="7" Text="Levels:" VerticalAlignment="Center" 
                               Margin="0,0,8,0" FontSize="12" FontWeight="Medium"/>

                    <!-- Level Filter Dropdown (like Pipeline selection) -->
                    <ComboBox Grid.Column="8" Height="26" MaxDropDownHeight="400"
                              Text="{Binding LevelSelectionText, Mode=OneWay}"
                              IsEditable="True"
                              IsReadOnly="True"
                              FontSize="11">
                        <ComboBox.Items>
                            <CheckBox IsChecked="{Binding ShowDebug}" Content="Debug" Margin="2" FontSize="11"/>
                            <CheckBox IsChecked="{Binding ShowInformation}" Content="Information" Margin="2" FontSize="11"/>
                            <CheckBox IsChecked="{Binding ShowWarning}" Content="Warning" Margin="2" FontSize="11"/>
                            <CheckBox IsChecked="{Binding ShowError}" Content="Error" Margin="2" FontSize="11"/>
                            <CheckBox IsChecked="{Binding ShowCritical}" Content="Critical" Margin="2" FontSize="11"/>
                        </ComboBox.Items>
                    </ComboBox>
                </Grid>
            </Grid>
        </Border>

        <!-- Main Content Area -->
        <Grid Grid.Row="1" Background="#FEFEFE">
            <!-- Beautiful Flat View DataGrid -->
            <DataGrid ItemsSource="{Binding FilteredCombinedEntries}" 
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      GridLinesVisibility="None"
                      RowHeight="22"
                      FontSize="11"
                      AlternationCount="2"
                      BorderThickness="0"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      ScrollViewer.CanContentScroll="True"
                      Visibility="{Binding IsTreeViewEnabled, Converter={StaticResource InverseBoolToVisibility}}">

                <DataGrid.Resources>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="AlternationIndex" Value="1">
                                <Setter Property="Background" Value="#FAFAFA"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F0F8FF"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#E3F2FD"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="Time" Binding="{Binding Timestamp, StringFormat='HH:mm:ss.fff'}" 
                                        Width="75" FontFamily="Consolas"/>

                    <!-- Beautiful colored level dots -->
                    <DataGridTemplateColumn Header="Level" Width="50">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock TextAlignment="Center">
                                    <Run Text="●" Foreground="{Binding LevelColor, Mode=OneWay}" FontSize="8"/>
                                    <Run Text=" "/>
                                    <Run Text="{Binding LevelText, Mode=OneWay}" FontWeight="Medium"/>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Header="Correlation" Binding="{Binding CorrelationId}" 
                                        Width="200" FontFamily="Consolas" FontSize="10"/>
                    <DataGridTextColumn Header="Pipeline" Binding="{Binding Pipeline}" Width="120"/>

                    <!-- Stage with icon and color -->
                    <DataGridTemplateColumn Header="Stage" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <Run Text="{Binding Stage, Converter={StaticResource StageToIcon}, Mode=OneWay}" 
                                         Foreground="{Binding Stage, Converter={StaticResource StageToColor}, Mode=OneWay}"/>
                                    <Run Text=" "/>
                                    <Run Text="{Binding StageIcon, Mode=OneWay}"/>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Header="Message" Binding="{Binding Message}" Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                <Setter Property="ToolTip" Value="{Binding Message}"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>

                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="📋 Copy Line" Command="{Binding CopyTextCommand}" 
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem.RawLine}"/>
                        <MenuItem Header="📄 Copy Message" Command="{Binding CopyTextCommand}" 
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem.Message}"/>
                        <Separator/>
                        <MenuItem Header="🗑 Clear Log" Command="{Binding ClearLogCommand}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
            </DataGrid>

            <!-- Beautiful Tree View with GRID LAYOUT -->
            <TreeView ItemsSource="{Binding CorrelationGroups}"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      ScrollViewer.CanContentScroll="True"
                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                      BorderThickness="0"
                      Padding="8"
                      Visibility="{Binding IsTreeViewEnabled, Converter={StaticResource BoolToVisibility}}"
                      FontSize="11">

                <TreeView.Resources>
                    <!-- Beautiful CorrelationGroup Template with GRID -->
                    <HierarchicalDataTemplate DataType="{x:Type models:CorrelationGroup}" ItemsSource="{Binding Stages}">
                        <Border Background="#F8F8F8" CornerRadius="4" Padding="8,6" Margin="0,2">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="1" BlurRadius="3" Opacity="0.1"/>
                            </Border.Effect>
                            <Border.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="📤 Export Group" 
                                                  Command="{Binding DataContext.ExportGroupCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                  CommandParameter="{Binding}"/>
                                    <MenuItem Header="📋 Copy ID" 
                                                  Command="{Binding DataContext.CopyTextCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                  CommandParameter="{Binding CorrelationId}"/>
                                </ContextMenu>
                            </Border.ContextMenu>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <!-- DateTime -->
                                    <ColumnDefinition Width="150"/>
                                    <!-- Pipeline -->
                                    <ColumnDefinition Width="250"/>
                                    <!-- CorrelationId -->
                                    <ColumnDefinition Width="100"/>
                                    <!-- Duration -->
                                    <ColumnDefinition Width="*"/>
                                    <!-- Status -->
                                </Grid.ColumnDefinitions>

                                <!-- Beautiful date/time display -->
                                <Border Grid.Column="0" Background="#E3F2FD" CornerRadius="3" Padding="6,2" Margin="4,0"
                                            HorizontalAlignment="Left">
                                    <TextBlock FontWeight="Bold" FontSize="12">
                                            <Run Text="📅" FontSize="10"/>
                                            <Run Text="{Binding StartTime, StringFormat='yyyy-MM-dd', Mode=OneWay}"/>
                                            <Run Text=" ⏰"/>
                                            <Run Text="{Binding StartTime, StringFormat='HH:mm:ss.fff', Mode=OneWay}"/>
                                    </TextBlock>
                                </Border>

                                <!-- Pipeline -->
                                <TextBlock Grid.Column="1" Text="{Binding Pipeline}" FontWeight="Medium" 
                                               VerticalAlignment="Center" Margin="8,0"/>

                                <!-- Small correlation ID -->
                                <TextBlock Grid.Column="2" Text="{Binding CorrelationId}" Opacity="0.5" FontSize="10" 
                                               FontFamily="Consolas" VerticalAlignment="Center" Margin="8,0"/>

                                <!-- Duration pill -->
                                <Border Grid.Column="3" Background="{Binding Status, Converter={StaticResource StatusToColor}}" 
                                            CornerRadius="10" Padding="8,2" Margin="8,0"
                                            HorizontalAlignment="Left">
                                    <TextBlock Text="{Binding DurationText}" Foreground="White" 
                                                   FontWeight="Medium" FontSize="10"/>
                                </Border>

                                <!-- Status -->
                                <TextBlock Grid.Column="4" Text="{Binding Status}" FontStyle="Italic" 
                                               Foreground="{Binding Status, Converter={StaticResource StatusToColor}}"
                                               VerticalAlignment="Center" Margin="4,0"/>
                            </Grid>
                        </Border>
                    </HierarchicalDataTemplate>

                    <!-- Stage Group Template with GRID -->
                    <HierarchicalDataTemplate DataType="{x:Type models:StageGroup}" ItemsSource="{Binding Entries}">
                        <Border Background="White" CornerRadius="3" Padding="6,4" Margin="0,1,0,1"
                                    BorderBrush="#E0E0E0" BorderThickness="1">
                            <Border.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="📤 Export Stage" 
                                                  Command="{Binding DataContext.ExportStageCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                  CommandParameter="{Binding}"/>
                                </ContextMenu>
                            </Border.ContextMenu>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25"/>
                                    <!-- Stage icon -->
                                    <ColumnDefinition Width="150"/>
                                    <!-- Stage name -->
                                    <ColumnDefinition Width="100"/>
                                    <!-- Entry count -->
                                    <ColumnDefinition Width="100"/>
                                    <!-- Duration -->
                                    <ColumnDefinition Width="*"/>
                                    <!-- Empty space -->
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Text="{Binding Stage, Converter={StaticResource StageToIcon}}" 
                                               Foreground="{Binding Stage, Converter={StaticResource StageToColor}}"
                                               FontSize="14" Margin="4,0"/>
                                <TextBlock Grid.Column="1" Text="{Binding Stage}" FontWeight="Medium" Margin="4,0"/>
                                <TextBlock Grid.Column="2" Opacity="0.6" Margin="4,0">
                                        <Run Text="("/>
                                        <Run Text="{Binding Entries.Count, Mode=OneWay}"/>
                                        <Run Text=" entries)"/>
                                </TextBlock>
                                <Border Grid.Column="3" Background="#4CAF50" CornerRadius="3" Padding="4,1" Margin="8,0"
                                            HorizontalAlignment="Left">
                                    <TextBlock Text="{Binding DurationText}" Foreground="White" FontSize="10"/>
                                </Border>
                            </Grid>
                        </Border>
                    </HierarchicalDataTemplate>

                    <!-- Log Entry Template with GRID -->
                    <DataTemplate DataType="{x:Type models:LogEntry}">
                        <Border Background="Transparent" Padding="2,1,2,1">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#F0F8FF"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Border.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="📋 Copy Line" 
                                                  Command="{Binding DataContext.CopyTextCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                  CommandParameter="{Binding RawLine}"/>
                                    <MenuItem Header="📄 Copy Message" 
                                                  Command="{Binding DataContext.CopyTextCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                  CommandParameter="{Binding Message}"/>
                                </ContextMenu>
                            </Border.ContextMenu>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="75"/>
                                    <!-- Time -->
                                    <ColumnDefinition Width="20"/>
                                    <!-- Level dot -->
                                    <ColumnDefinition Width="*"/>
                                    <!-- Message -->
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Text="{Binding Timestamp, StringFormat='HH:mm:ss.fff'}" 
                                               Opacity="0.6" FontFamily="Consolas"/>
                                <TextBlock Grid.Column="1" TextAlignment="Center" Margin="8,0">
                                        <Run Text="●" Foreground="{Binding LevelColor, Mode=OneWay}" FontSize="8"/>
                                </TextBlock>
                                <TextBlock Grid.Column="2" Text="{Binding Message}" TextTrimming="CharacterEllipsis">
                                    <TextBlock.ToolTip>
                                        <TextBlock Text="{Binding Message}" MaxWidth="600" TextWrapping="Wrap"/>
                                    </TextBlock.ToolTip>
                                    </TextBlock>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </TreeView.Resources>

                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>
        </Grid>

        <!-- Beautiful Status Bar - UPDATED with loaded files info -->
        <StatusBar Grid.Row="2" Background="#F5F5F5" BorderBrush="#E0E0E0" BorderThickness="0,1,0,0">
            <StatusBarItem>
                <TextBlock FontSize="11">
                    <Run Text="📊 Total:"/>
                    <Run Text="{Binding TotalLineCount, Mode=OneWay}" FontWeight="Bold" Foreground="#0078D4"/>
                    <Run Text=" | Displayed:"/>
                    <Run Text="{Binding DisplayedLineCount, Mode=OneWay}" FontWeight="Bold" Foreground="#107C10"/>
                </TextBlock>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock FontSize="11">
                    <Run Text="📁 "/>
                    <Run Text="{Binding LoadedFilesText, Mode=OneWay}" FontWeight="Medium"/>
                </TextBlock>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock FontSize="11" Visibility="{Binding HasActiveFilters, Converter={StaticResource BoolToVisibility}}">
                    <Run Text="🔍 Filters active" Foreground="#FFA500"/>
                </TextBlock>
            </StatusBarItem>
            <Separator Visibility="{Binding HasActiveFilters, Converter={StaticResource BoolToVisibility}}"/>
            <StatusBarItem>
                <TextBlock FontSize="11" Visibility="{Binding IsAutoScrollEnabled, Converter={StaticResource BoolToVisibility}}">
                    <Run Text="🔄 Auto-refresh (10s)" Foreground="#4CAF50"/>
                </TextBlock>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding OpenLogFolderCommand}" 
                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                            ToolTip="Open Log Folder" Margin="0,0,8,0">
                        <TextBlock Text="📁 Open Folder" FontSize="11"/>
                    </Button>
                    <Button Command="{Binding ExportLogCommand}" 
                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                            ToolTip="Export visible logs">
                        <TextBlock Text="💾 Export..." FontSize="11"/>
                    </Button>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Page>
