# ============================================================================
# WISDOM SOURCES - Service
# ============================================================================
# Project: CamBridge.Service
# Version: 0.7.10
# Generated: 2025-06-13 17:24
# Description: Windows service and API implementation
# Total Files: 12
# ============================================================================

# TABLE OF CONTENTS:
# ===================
# - src\CamBridge.Service\CamBridgeHealthCheck.cs
# - src\CamBridge.Service\Controllers\StatusController.cs
# - src\CamBridge.Service\DailySummaryService.cs
# - src\CamBridge.Service\Program.cs
# - src\CamBridge.Service\ServiceInfo.cs
# - src\CamBridge.Service\Worker.cs
# - src\CamBridge.Service\appsettings.Development.json
# - src\CamBridge.Service\appsettings.json
# - src\CamBridge.Service\mappings.json
# - src\CamBridge.Service\obj\CamBridge.Service.csproj.nuget.dgspec.json
# - src\CamBridge.Service\obj\project.assets.json
# - src\CamBridge.Service\Properties\launchSettings.json

# ============================================================================


# ============================================================================
# FILE: src\CamBridge.Service\CamBridgeHealthCheck.cs
# SIZE: 4.3 KB
# MODIFIED: 2025-06-09 22:03
# ============================================================================

// src/CamBridge.Service/CamBridgeHealthCheck.cs
// Version: 0.7.0
// Description: Health check implementation using PipelineManager instead of ProcessingQueue
// Copyright: © 2025 Claude's Improbably Reliable Software Solutions

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using CamBridge.Core.Interfaces;
using CamBridge.Infrastructure.Services;
using Microsoft.Extensions.Diagnostics.HealthChecks;
using Microsoft.Extensions.Logging;

namespace CamBridge.Service
{
    /// <summary>
    /// Health check for CamBridge service
    /// KISS UPDATE: Now uses PipelineManager to aggregate health from all pipelines
    /// </summary>
    public class CamBridgeHealthCheck : IHealthCheck
    {
        private readonly ILogger<CamBridgeHealthCheck> _logger;
        private readonly PipelineManager _pipelineManager;
        private readonly INotificationService _notificationService;

        public CamBridgeHealthCheck(
            ILogger<CamBridgeHealthCheck> logger,
            PipelineManager pipelineManager,
            INotificationService notificationService)
        {
            _logger = logger ?? throw new ArgumentNullException(nameof(logger));
            _pipelineManager = pipelineManager ?? throw new ArgumentNullException(nameof(pipelineManager));
            _notificationService = notificationService ?? throw new ArgumentNullException(nameof(notificationService));
        }

        public Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default)
        {
            try
            {
                // Get status from all pipelines
                var pipelineStatuses = _pipelineManager.GetPipelineStatuses();

                if (!pipelineStatuses.Any())
                {
                    return Task.FromResult(HealthCheckResult.Unhealthy("No pipelines configured"));
                }

                // Aggregate statistics from all pipelines
                var totalQueued = pipelineStatuses.Sum(p => p.Value.QueueLength);
                var totalActive = pipelineStatuses.Sum(p => p.Value.ActiveProcessing);
                var totalProcessed = pipelineStatuses.Sum(p => p.Value.TotalProcessed);
                var totalFailed = pipelineStatuses.Sum(p => p.Value.TotalFailed);
                var activePipelines = pipelineStatuses.Count(p => p.Value.IsActive);

                var data = new Dictionary<string, object>
                {
                    ["TotalPipelines"] = pipelineStatuses.Count,
                    ["ActivePipelines"] = activePipelines,
                    ["QueueLength"] = totalQueued,
                    ["ActiveProcessing"] = totalActive,
                    ["TotalProcessed"] = totalProcessed,
                    ["TotalFailed"] = totalFailed,
                    ["ServiceUptime"] = DateTime.UtcNow - Program.ServiceStartTime
                };

                // Determine health based on queue size and failure rate
                if (totalQueued > 1000)
                {
                    return Task.FromResult(HealthCheckResult.Degraded(
                        $"Large queue backlog: {totalQueued} items",
                        data: data));
                }

                if (totalProcessed > 0 && totalFailed > totalProcessed * 0.5)
                {
                    return Task.FromResult(HealthCheckResult.Unhealthy(
                        $"High failure rate: {totalFailed}/{totalProcessed}",
                        data: data));
                }

                if (activePipelines == 0)
                {
                    return Task.FromResult(HealthCheckResult.Unhealthy(
                        "No active pipelines",
                        data: data));
                }

                return Task.FromResult(HealthCheckResult.Healthy(
                    $"Service healthy - {activePipelines}/{pipelineStatuses.Count} pipelines active",
                    data: data));
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Health check failed");
                return Task.FromResult(HealthCheckResult.Unhealthy("Health check error", ex));
            }
        }
    }
}


# === END OF FILE: src\CamBridge.Service\CamBridgeHealthCheck.cs ===


# ============================================================================
# FILE: src\CamBridge.Service\Controllers\StatusController.cs
# SIZE: 11.4 KB
# MODIFIED: 2025-06-10 23:40
# ============================================================================

// src\CamBridge.Service\Controllers\StatusController.cs
// Version: 0.7.7
// Description: Simple service status API controller (without DeadLetterQueue)

using Microsoft.AspNetCore.Mvc;
using CamBridge.Core;
using CamBridge.Infrastructure.Services;
using Microsoft.Extensions.Options;
using System.Reflection;

namespace CamBridge.Service.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class StatusController : ControllerBase
    {
        private readonly PipelineManager _pipelineManager;
        private readonly IOptions<CamBridgeSettingsV2> _settings;
        private readonly ILogger<StatusController> _logger;
        private static readonly DateTime _startTime = DateTime.UtcNow;

        public StatusController(
            PipelineManager pipelineManager,
            IOptions<CamBridgeSettingsV2> settings,
            ILogger<StatusController> logger)
        {
            _pipelineManager = pipelineManager;
            _settings = settings;
            _logger = logger;
        }

        /// <summary>
        /// Get service status
        /// </summary>
        [HttpGet]
        public IActionResult GetStatus()
        {
            try
            {
                var pipelineStatuses = _pipelineManager.GetPipelineStatuses();

                var status = new
                {
                    ServiceName = ServiceInfo.ServiceName,
                    Version = ServiceInfo.Version,
                    Status = "Online",
                    Timestamp = DateTime.UtcNow,
                    Uptime = GetUptime(),
                    Environment = new
                    {
                        MachineName = Environment.MachineName,
                        OSVersion = Environment.OSVersion.ToString(),
                        ProcessorCount = Environment.ProcessorCount,
                        WorkingSet = Environment.WorkingSet / (1024 * 1024),
                        DotNetVersion = Environment.Version.ToString()
                    },
                    Pipelines = pipelineStatuses.Select(kvp => new
                    {
                        kvp.Value.Id,
                        kvp.Value.Name,
                        kvp.Value.IsActive,
                        kvp.Value.QueueLength,
                        kvp.Value.ActiveProcessing,
                        kvp.Value.TotalProcessed,
                        kvp.Value.TotalSuccessful,
                        kvp.Value.TotalFailed
                    }).ToList(),
                    TotalStatistics = new
                    {
                        TotalPipelines = pipelineStatuses.Count,
                        ActivePipelines = pipelineStatuses.Count(p => p.Value.IsActive),
                        TotalProcessed = pipelineStatuses.Sum(p => p.Value.TotalProcessed),
                        TotalErrors = pipelineStatuses.Sum(p => p.Value.TotalFailed),
                        TotalQueued = pipelineStatuses.Sum(p => p.Value.QueueLength)
                    },
                    ConfigurationPath = ConfigurationPaths.GetPrimaryConfigPath()
                };

                return Ok(status);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error getting service status");
                return StatusCode(500, new { Error = "Failed to retrieve service status" });
            }
        }

        /// <summary>
        /// Get status for a specific pipeline
        /// </summary>
        [HttpGet("pipeline/{id}")]
        public IActionResult GetPipelineStatus(string id)
        {
            try
            {
                var details = _pipelineManager.GetPipelineDetails(id);
                if (details == null)
                {
                    return NotFound(new { Error = $"Pipeline '{id}' not found" });
                }

                return Ok(details);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error getting pipeline status for {PipelineId}", id);
                return StatusCode(500, new { Error = "Failed to retrieve pipeline status" });
            }
        }

        /// <summary>
        /// Get health status (minimal endpoint for monitoring)
        /// </summary>
        [HttpGet("health")]
        public IActionResult GetHealth()
        {
            var pipelineStatuses = _pipelineManager.GetPipelineStatuses();

            return Ok(new
            {
                Status = "Healthy",
                Version = ServiceInfo.Version,
                Timestamp = DateTime.UtcNow,
                ActivePipelines = pipelineStatuses.Count(p => p.Value.IsActive)
            });
        }

        /// <summary>
        /// Get version information
        /// </summary>
        [HttpGet("version")]
        public IActionResult GetVersion()
        {
            var assembly = Assembly.GetExecutingAssembly();
            var fileVersionInfo = System.Diagnostics.FileVersionInfo.GetVersionInfo(assembly.Location);

            return Ok(new
            {
                Version = ServiceInfo.Version,
                AssemblyVersion = assembly.GetName().Version?.ToString() ?? "Unknown",
                FileVersion = fileVersionInfo.FileVersion ?? "Unknown",
                ProductVersion = fileVersionInfo.ProductVersion ?? "Unknown",
                InformationalVersion = assembly.GetCustomAttribute<AssemblyInformationalVersionAttribute>()?.InformationalVersion ?? ServiceInfo.Version,
                Copyright = ServiceInfo.Copyright,
                Company = fileVersionInfo.CompanyName ?? "Claude's Improbably Reliable Software Solutions",
                Product = ServiceInfo.DisplayName,
                BuildConfiguration =
#if DEBUG
                    "Debug"
#else
                    "Release"
#endif
            });
        }

        /// <summary>
        /// Get pipeline configurations
        /// </summary>
        [HttpGet("pipelines")]
        public IActionResult GetPipelines()
        {
            try
            {
                var pipelines = _settings.Value.Pipelines.Select(p => new
                {
                    p.Id,
                    p.Name,
                    p.Description,
                    IsEnabled = p.Enabled,
                    WatchPath = p.WatchSettings.Path,
                    WatchPattern = p.WatchSettings.FilePattern,
                    IncludeSubdirectories = p.WatchSettings.IncludeSubdirectories,
                    Output = new
                    {
                        Folder = p.WatchSettings.OutputPath ?? p.ProcessingOptions.ArchiveFolder,
                        Organization = p.ProcessingOptions.OutputOrganization.ToString(),
                        FilePattern = p.ProcessingOptions.OutputFilePattern ?? "{PatientID}_{StudyDate}_{InstanceNumber}"
                    },
                    Processing = new
                    {
                        DeleteOriginalAfterProcessing = p.ProcessingOptions.SuccessAction == PostProcessingAction.Delete,
                        MaxConcurrentProcessing = p.ProcessingOptions.MaxConcurrentProcessing,
                        MaxRetryAttempts = p.ProcessingOptions.MaxRetryAttempts,
                        RetryDelaySeconds = p.ProcessingOptions.RetryDelaySeconds
                    }
                }).ToList();

                return Ok(new
                {
                    Count = pipelines.Count,
                    Pipelines = pipelines
                });
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error getting pipeline configurations");
                return StatusCode(500, new { Error = "Failed to retrieve pipeline configurations" });
            }
        }

        /// <summary>
        /// Get pipeline statistics
        /// </summary>
        [HttpGet("statistics")]
        public IActionResult GetStatistics()
        {
            try
            {
                var pipelineStatuses = _pipelineManager.GetPipelineStatuses();

                var statistics = new
                {
                    Timestamp = DateTime.UtcNow,
                    Pipelines = pipelineStatuses.Select(kvp => new
                    {
                        kvp.Value.Id,
                        kvp.Value.Name,
                        Statistics = new
                        {
                            ProcessedCount = kvp.Value.TotalProcessed,
                            SuccessCount = kvp.Value.TotalSuccessful,
                            ErrorCount = kvp.Value.TotalFailed
                        },
                        QueueDepth = kvp.Value.QueueLength,
                        IsProcessing = kvp.Value.ActiveProcessing > 0
                    }).ToList(),
                    Summary = new
                    {
                        TotalPipelines = pipelineStatuses.Count,
                        ActivePipelines = pipelineStatuses.Count(p => p.Value.IsActive),
                        TotalProcessed = pipelineStatuses.Sum(p => p.Value.TotalProcessed),
                        TotalErrors = pipelineStatuses.Sum(p => p.Value.TotalFailed),
                        TotalQueued = pipelineStatuses.Sum(p => p.Value.QueueLength)
                    }
                };

                return Ok(statistics);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error getting statistics");
                return StatusCode(500, new { Error = "Failed to retrieve statistics" });
            }
        }

        /// <summary>
        /// Enable a pipeline
        /// </summary>
        [HttpPost("pipeline/{id}/enable")]
        public async Task<IActionResult> EnablePipeline(string id)
        {
            try
            {
                await _pipelineManager.EnablePipelineAsync(id);
                return Ok(new { Message = $"Pipeline {id} enabled" });
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error enabling pipeline {PipelineId}", id);
                return StatusCode(500, new { Error = "Failed to enable pipeline" });
            }
        }

        /// <summary>
        /// Disable a pipeline
        /// </summary>
        [HttpPost("pipeline/{id}/disable")]
        public async Task<IActionResult> DisablePipeline(string id)
        {
            try
            {
                await _pipelineManager.DisablePipelineAsync(id);
                return Ok(new { Message = $"Pipeline {id} disabled" });
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error disabling pipeline {PipelineId}", id);
                return StatusCode(500, new { Error = "Failed to disable pipeline" });
            }
        }

        private string GetUptime()
        {
            var uptime = DateTime.UtcNow - _startTime;

            if (uptime.TotalDays >= 1)
            {
                return $"{(int)uptime.TotalDays}d {uptime.Hours}h {uptime.Minutes}m";
            }
            else if (uptime.TotalHours >= 1)
            {
                return $"{(int)uptime.TotalHours}h {uptime.Minutes}m";
            }
            else
            {
                return $"{(int)uptime.TotalMinutes}m";
            }
        }
    }
}


# === END OF FILE: src\CamBridge.Service\Controllers\StatusController.cs ===


# ============================================================================
# FILE: src\CamBridge.Service\DailySummaryService.cs
# SIZE: 3.1 KB
# MODIFIED: 2025-06-01 22:37
# ============================================================================

using System;
using System.Threading;
using System.Threading.Tasks;
using CamBridge.Core;
using CamBridge.Infrastructure.Services;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Options;

namespace CamBridge.Service
{
    /// <summary>
    /// Background service that sends daily summaries
    /// </summary>
    public class DailySummaryService : BackgroundService
    {
        private readonly ILogger<DailySummaryService> _logger;
        private readonly ProcessingQueue _processingQueue;
        private readonly INotificationService _notificationService;
        private readonly NotificationSettings _settings;
        private Timer? _timer;

        public DailySummaryService(
            ILogger<DailySummaryService> logger,
            ProcessingQueue processingQueue,
            INotificationService notificationService,
            IOptions<NotificationSettings> settings)
        {
            _logger = logger ?? throw new ArgumentNullException(nameof(logger));
            _processingQueue = processingQueue ?? throw new ArgumentNullException(nameof(processingQueue));
            _notificationService = notificationService ?? throw new ArgumentNullException(nameof(notificationService));
            _settings = settings?.Value ?? throw new ArgumentNullException(nameof(settings));
        }

        protected override Task ExecuteAsync(CancellationToken stoppingToken)
        {
            if (!_settings.SendDailySummary)
            {
                _logger.LogInformation("Daily summary notifications are disabled");
                return Task.CompletedTask;
            }

            // Calculate time until next summary
            var now = DateTime.Now;
            var nextRun = now.Date.AddHours(_settings.DailySummaryHour);
            if (nextRun <= now)
            {
                nextRun = nextRun.AddDays(1);
            }

            var delay = nextRun - now;
            _logger.LogInformation("Daily summary scheduled for {NextRun} (in {Delay})",
                nextRun, delay);

            _timer = new Timer(
                SendDailySummary,
                null,
                delay,
                TimeSpan.FromDays(1));

            return Task.CompletedTask;
        }

        private async void SendDailySummary(object? state)
        {
            try
            {
                _logger.LogInformation("Sending daily summary");
                var summary = _processingQueue.GetDailySummary();
                await _notificationService.SendDailySummaryAsync(summary);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error sending daily summary");
            }
        }

        public override Task StopAsync(CancellationToken cancellationToken)
        {
            _timer?.Dispose();
            return base.StopAsync(cancellationToken);
        }

        public override void Dispose()
        {
            _timer?.Dispose();
            base.Dispose();
        }
    }
}


# === END OF FILE: src\CamBridge.Service\DailySummaryService.cs ===


# ============================================================================
# FILE: src\CamBridge.Service\Program.cs
# SIZE: 18.4 KB
# MODIFIED: 2025-06-10 22:56
# ============================================================================

// src/CamBridge.Service/Program.cs
// Version: 0.7.5+tools
// Description: Windows service entry point with centralized config management
// Copyright: © 2025 Claude's Improbably Reliable Software Solutions

using CamBridge.Core;
using CamBridge.Infrastructure;
using CamBridge.Infrastructure.Services;
using CamBridge.Service;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Options;
using Serilog;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Threading.Tasks;

// Set service start time
Program.ServiceStartTime = DateTime.UtcNow;

// Windows Event Log for Debugging
EventLog? serviceEventLog = null;
try
{
    // Try to create event source if not exists
    if (!EventLog.SourceExists(ServiceInfo.ServiceName))
    {
        EventLog.CreateEventSource(ServiceInfo.ServiceName, "Application");
    }

    serviceEventLog = new EventLog("Application");
    serviceEventLog.Source = ServiceInfo.ServiceName;
    serviceEventLog.WriteEntry($"{ServiceInfo.GetFullVersionString()} starting...", EventLogEntryType.Information, 1000);
}
catch (Exception ex)
{
    // Ignore if we can't write to event log (permissions)
    Console.WriteLine($"Could not initialize Event Log: {ex.Message}");
}

// Better service detection
var isService = false;
try
{
    // More reliable check using command line args first
    if (args.Contains("--console") || args.Contains("-c"))
    {
        isService = false;
        serviceEventLog?.WriteEntry("Running in console mode (explicit parameter)", EventLogEntryType.Information, 1001);
    }
    else if (args.Contains("--service"))
    {
        isService = true;
        serviceEventLog?.WriteEntry("Running as Windows Service (explicit parameter)", EventLogEntryType.Information, 1002);
    }
    else
    {
        // Fallback to environment check
        isService = !Environment.UserInteractive;
        serviceEventLog?.WriteEntry($"Running as: {(isService ? "Service" : "Console")} (auto-detected)", EventLogEntryType.Information, 1003);
    }
}
catch (Exception ex)
{
    serviceEventLog?.WriteEntry($"Error detecting service mode: {ex.Message}", EventLogEntryType.Error, 1004);
}

// Configure Serilog with centralized log path
try
{
    var logPath = Path.Combine(
        ConfigurationPaths.GetLogsDirectory(),
        "service-.log"
    );

    Log.Logger = new LoggerConfiguration()
        .MinimumLevel.Debug()
        .WriteTo.File(
            path: logPath,
            rollingInterval: RollingInterval.Day,
            retainedFileCountLimit: 30,
            outputTemplate: "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {SourceContext} - {Message:lj}{NewLine}{Exception}")
        .WriteTo.EventLog(ServiceInfo.ServiceName, "Application", manageEventSource: false)
        .WriteTo.Conditional(
            _ => !isService,
            wt => wt.Console(outputTemplate: "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}"))
        .CreateBootstrapLogger();

    serviceEventLog?.WriteEntry($"Serilog configured. Logging to: {logPath}", EventLogEntryType.Information, 1005);
}
catch (Exception ex)
{
    serviceEventLog?.WriteEntry($"Failed to configure Serilog: {ex.Message}", EventLogEntryType.Error, 1006);
}

try
{
    Log.Information("Starting {ServiceName} with Centralized Config...", ServiceInfo.GetFullVersionString());
    Log.Information("Running as: {Mode}", isService ? "Windows Service" : "Console Application");
    Log.Information("Command line args: {Args}", string.Join(" ", args));

    // Log configuration paths for diagnostics
    Log.Information("Configuration Paths:\n{DiagnosticInfo}", ConfigurationPaths.GetDiagnosticInfo());

    // CRITICAL: Initialize primary config if needed
    var localConfigPath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "appsettings.json");
    if (ConfigurationPaths.InitializePrimaryConfig())
    {
        Log.Information("Initialized primary config from local template");
        serviceEventLog?.WriteEntry("Copied default config to ProgramData", EventLogEntryType.Information, 1007);
    }

    // CRITICAL FIX: Set working directory to service location (for relative paths like Tools\)
    if (isService)
    {
        var serviceDirectory = Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location);
        if (!string.IsNullOrEmpty(serviceDirectory))
        {
            Directory.SetCurrentDirectory(serviceDirectory);
            Log.Information("Working directory set to: {Directory}", serviceDirectory);
            serviceEventLog?.WriteEntry($"Working directory: {serviceDirectory}", EventLogEntryType.Information, 1009);
        }
    }

    serviceEventLog?.WriteEntry("Host builder starting...", EventLogEntryType.Information, 1010);

    var builder = Host.CreateDefaultBuilder(args);

    // Configure for Windows Service or Console
    if (isService)
    {
        Log.Information("Configuring for Windows Service mode");
        serviceEventLog?.WriteEntry("Configuring Windows Service support", EventLogEntryType.Information, 1011);

        builder.UseWindowsService(options =>
        {
            options.ServiceName = ServiceInfo.ServiceName;
        });

        // Don't start web host immediately for service
        builder.ConfigureServices((context, services) =>
        {
            services.Configure<HostOptions>(options =>
            {
                // Give service more time to start
                options.ShutdownTimeout = TimeSpan.FromSeconds(30);
            });
        });
    }
    else
    {
        builder.UseEnvironment("Development");
    }

    builder.ConfigureAppConfiguration((context, config) =>
    {
        var env = context.HostingEnvironment;

        // CRITICAL: Use centralized config path!
        var primaryConfigPath = ConfigurationPaths.GetPrimaryConfigPath();

        Log.Information("Loading configuration from: {ConfigPath}", primaryConfigPath);
        serviceEventLog?.WriteEntry($"Loading config from: {primaryConfigPath}", EventLogEntryType.Information, 1012);

        // Clear default sources and add our specific order
        config.Sources.Clear();

        // 1. Primary config (from ProgramData)
        config.AddJsonFile(primaryConfigPath, optional: false, reloadOnChange: true);

        // 2. Local override for development (if exists)
        config.AddJsonFile($"appsettings.{env.EnvironmentName}.json", optional: true, reloadOnChange: true);

        // 3. Environment variables
        config.AddEnvironmentVariables("CAMBRIDGE_");

        // 4. Command line (highest priority)
        config.AddCommandLine(args);

        Log.Information("Configuration loaded for environment: {Environment}", env.EnvironmentName);
    });

    // Configure Serilog from configuration
    builder.UseSerilog((context, services, loggerConfiguration) =>
    {
        var logPath = Path.Combine(
            ConfigurationPaths.GetLogsDirectory(),
            "service-.log"
        );

        loggerConfiguration
            .ReadFrom.Configuration(context.Configuration)
            .ReadFrom.Services(services)
            .Enrich.FromLogContext()
            .Enrich.WithProperty("ApplicationName", "CamBridge")
            .WriteTo.File(
                path: logPath,
                rollingInterval: RollingInterval.Day,
                retainedFileCountLimit: 30,
                outputTemplate: "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {SourceContext} - {Message:lj}{NewLine}{Exception}")
            .WriteTo.EventLog(ServiceInfo.ServiceName, "Application", manageEventSource: false);

        if (!isService)
        {
            loggerConfiguration.WriteTo.Console(
                outputTemplate: "[{Timestamp:HH:mm:ss} {Level:u3}] {SourceContext} - {Message:lj}{NewLine}{Exception}");
        }
    });

    builder.ConfigureServices((context, services) =>
    {
        serviceEventLog?.WriteEntry("Configuring services...", EventLogEntryType.Information, 1013);

        var configuration = context.Configuration;

        // Core Infrastructure with Pipeline support
        services.AddInfrastructure(configuration);

        // Main Worker service
        services.AddHostedService<Worker>();

        // Health Checks
        services.AddHealthChecks()
            .AddCheck<CamBridgeHealthCheck>("cambridge");

        // Daily Summary Service - TEMPORARILY DISABLED until we fix per-pipeline queues
        // services.AddHostedService<DailySummaryService>();

        // Web API
        services.AddControllers();
        services.AddCors(options =>
        {
            options.AddPolicy("ConfigUI", policy =>
            {
                policy.WithOrigins("http://localhost:*", "https://localhost:*")
                      .AllowAnyMethod()
                      .AllowAnyHeader()
                      .AllowCredentials();
            });
        });

        serviceEventLog?.WriteEntry("Services configured successfully", EventLogEntryType.Information, 1014);
    });

    // Configure Web Host
    serviceEventLog?.WriteEntry("Configuring web host...", EventLogEntryType.Information, 1015);

    builder.ConfigureWebHostDefaults(webBuilder =>
    {
        webBuilder.UseStartup<Startup>();
        webBuilder.UseUrls($"http://localhost:{ServiceInfo.ApiPort}");

        // For Windows Service, configure Kestrel to not wait for requests
        if (isService)
        {
            webBuilder.ConfigureKestrel(serverOptions =>
            {
                serverOptions.AllowSynchronousIO = true;
            });
        }
    });

    serviceEventLog?.WriteEntry("Building host...", EventLogEntryType.Information, 1016);
    var host = builder.Build();

    // Validate infrastructure
    serviceEventLog?.WriteEntry("Validating infrastructure...", EventLogEntryType.Information, 1017);
    using (var scope = host.Services.CreateScope())
    {
        try
        {
            scope.ServiceProvider.ValidateInfrastructure();
            Log.Information("Infrastructure validation completed successfully");
            serviceEventLog?.WriteEntry("Infrastructure validation successful", EventLogEntryType.Information, 1018);

            // Show active features
            Log.Information("=========================================");
            Log.Information("ACTIVE FEATURES v{Version}:", ServiceInfo.Version);
            Log.Information("✓ Centralized Configuration");
            Log.Information("✓ Pipeline Architecture");
            Log.Information("✓ Multi-Pipeline Support");
            Log.Information("✓ Basic Pipeline (ExifTool → DICOM)");
            Log.Information("✓ Health Checks");
            Log.Information("✓ Web API");
            Log.Information(isService ? "✓ Windows Service" : "✓ Console Mode");
            Log.Information("✓ Tab-Complete Testing Tools");
            Log.Information("=========================================");
        }
        catch (Exception ex)
        {
            Log.Fatal(ex, "Infrastructure validation failed");
            serviceEventLog?.WriteEntry($"Infrastructure validation failed: {ex.Message}", EventLogEntryType.Error, 1019);
            throw;
        }
    }

    // Run the host
    serviceEventLog?.WriteEntry("Starting host...", EventLogEntryType.Information, 1020);
    await host.RunAsync();
}
catch (Exception ex)
{
    Log.Fatal(ex, "Application terminated unexpectedly");
    serviceEventLog?.WriteEntry($"Service failed: {ex}", EventLogEntryType.Error, 1999);
    return 1;
}
finally
{
    serviceEventLog?.WriteEntry("Service stopping", EventLogEntryType.Information, 1021);
    Log.CloseAndFlush();
    serviceEventLog?.Dispose();
}

return 0;

// Startup class with pipeline support
public class Startup
{
    public IConfiguration Configuration { get; }

    public Startup(IConfiguration configuration)
    {
        Configuration = configuration;
    }

    public void ConfigureServices(IServiceCollection services)
    {
        // Services are already configured in Program.cs
    }

    public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
    {
        if (env.IsDevelopment())
        {
            app.UseDeveloperExceptionPage();
        }

        app.UseRouting();
        app.UseCors("ConfigUI");

        app.UseEndpoints(endpoints =>
        {
            endpoints.MapControllers();
            endpoints.MapHealthChecks("/health");

            // Status endpoint with pipeline support
            endpoints.MapGet("/api/status", async context =>
            {
                var pipelineManager = context.RequestServices.GetService<PipelineManager>();
                var settingsV2 = context.RequestServices.GetService<IOptions<CamBridgeSettingsV2>>();

                var pipelineStatuses = pipelineManager?.GetPipelineStatuses() ?? new Dictionary<string, PipelineStatus>();

                // Calculate totals
                var totalQueued = pipelineStatuses.Sum(p => p.Value.QueueLength);
                var totalActive = pipelineStatuses.Sum(p => p.Value.ActiveProcessing);
                var totalProcessed = pipelineStatuses.Sum(p => p.Value.TotalProcessed);
                var totalSuccessful = pipelineStatuses.Sum(p => p.Value.TotalSuccessful);
                var totalFailed = pipelineStatuses.Sum(p => p.Value.TotalFailed);
                var successRate = totalProcessed > 0
                    ? (double)totalSuccessful / totalProcessed * 100
                    : 0;

                var status = new
                {
                    ServiceStatus = "Running",
                    Version = ServiceInfo.Version,
                    Mode = Environment.UserInteractive ? "Console" : "Service",
                    Uptime = DateTime.UtcNow - Program.ServiceStartTime,
                    ConfigPath = ConfigurationPaths.GetPrimaryConfigPath(),
                    ConfigExists = ConfigurationPaths.PrimaryConfigExists(),
                    PipelineCount = pipelineStatuses.Count,
                    ActivePipelines = pipelineStatuses.Count(p => p.Value.IsActive),
                    QueueLength = totalQueued,
                    ActiveProcessing = totalActive,
                    TotalSuccessful = totalSuccessful,
                    TotalFailed = totalFailed,
                    SuccessRate = successRate,
                    Pipelines = pipelineStatuses.Select(p => new
                    {
                        Id = p.Key,
                        Name = p.Value.Name,
                        IsActive = p.Value.IsActive,
                        QueueLength = p.Value.QueueLength,
                        ActiveProcessing = p.Value.ActiveProcessing,
                        TotalProcessed = p.Value.TotalProcessed,
                        TotalSuccessful = p.Value.TotalSuccessful,
                        TotalFailed = p.Value.TotalFailed,
                        WatchedFolders = p.Value.WatchedFolders
                    }),
                    Configuration = new
                    {
                        DefaultOutputFolder = settingsV2?.Value?.DefaultOutputFolder,
                        ExifToolPath = settingsV2?.Value?.ExifToolPath,
                        Version = settingsV2?.Value?.Version
                    }
                };

                context.Response.ContentType = "application/json";
                await context.Response.WriteAsJsonAsync(status);
            });

            // Pipeline-specific endpoints
            endpoints.MapGet("/api/pipelines", async context =>
            {
                var pipelineManager = context.RequestServices.GetService<PipelineManager>();
                var statuses = pipelineManager?.GetPipelineStatuses() ?? new Dictionary<string, PipelineStatus>();

                context.Response.ContentType = "application/json";
                await context.Response.WriteAsJsonAsync(statuses);
            });

            endpoints.MapGet("/api/pipelines/{id}", async context =>
            {
                var pipelineId = context.Request.RouteValues["id"]?.ToString();
                if (string.IsNullOrEmpty(pipelineId))
                {
                    context.Response.StatusCode = 400;
                    return;
                }

                var pipelineManager = context.RequestServices.GetService<PipelineManager>();
                var details = pipelineManager?.GetPipelineDetails(pipelineId);

                if (details == null)
                {
                    context.Response.StatusCode = 404;
                    return;
                }

                context.Response.ContentType = "application/json";
                await context.Response.WriteAsJsonAsync(details);
            });

            // Development endpoints
            if (env.IsDevelopment())
            {
                endpoints.MapGet("/", async context =>
                {
                    context.Response.ContentType = "text/html";
                    await context.Response.WriteAsync($@"
                        <html>
                        <head><title>{ServiceInfo.GetFullVersionString()}</title></head>
                        <body>
                            <h1>CamBridge Service - Centralized Configuration</h1>
                            <p>Version: {ServiceInfo.Version}</p>
                            <p>Service läuft mit zentraler Config!</p>
                            <ul>
                                <li>Health: <a href='/health'>/health</a></li>
                                <li>Status: <a href='/api/status'>/api/status</a></li>
                                <li>Pipelines: <a href='/api/pipelines'>/api/pipelines</a></li>
                            </ul>
                            <hr/>
                            <small>{ServiceInfo.Copyright}</small>
                        </body>
                        </html>");
                });
            }
        });
    }
}

// Service start time storage
public partial class Program
{
    public static DateTime ServiceStartTime { get; private set; }
}


# === END OF FILE: src\CamBridge.Service\Program.cs ===


# ============================================================================
# FILE: src\CamBridge.Service\ServiceInfo.cs
# SIZE: 2.7 KB
# MODIFIED: 2025-06-12 23:39
# ============================================================================

// src/CamBridge.Service/ServiceInfo.cs
// Version: 0.7.9
// Description: Central service version and metadata information
// Copyright: © 2025 Claude's Improbably Reliable Software Solutions

using System.Diagnostics;
using System.Reflection;

namespace CamBridge.Service
{
    /// <summary>
    /// Central location for all service version and metadata information
    /// This is the SINGLE SOURCE OF TRUTH for version numbers!
    /// </summary>
    public static class ServiceInfo
    {
        /// <summary>
        /// Current version of the service - UPDATE THIS for new releases!
        /// </summary>
        public const string Version = "0.7.9";

        /// <summary>
        /// Service name as registered in Windows
        /// </summary>
        public const string ServiceName = "CamBridgeService";

        /// <summary>
        /// Display name shown in Services Manager
        /// </summary>
        public const string DisplayName = "CamBridge Medical Image Converter";

        /// <summary>
        /// Service description
        /// </summary>
        public const string Description = "Converts JPEG images from Ricoh cameras to DICOM format for medical imaging systems";

        /// <summary>
        /// Copyright notice
        /// </summary>
        public const string Copyright = "© 2025 Claude's Improbably Reliable Software Solutions";

        /// <summary>
        /// Company name from version information
        /// </summary>
        public static string Company
        {
            get
            {
                try
                {
                    var assembly = Assembly.GetExecutingAssembly();
                    var fileVersionInfo = FileVersionInfo.GetVersionInfo(assembly.Location);
                    return fileVersionInfo.CompanyName ?? "Claude's Improbably Reliable Software Solutions";
                }
                catch
                {
                    return "Claude's Improbably Reliable Software Solutions";
                }
            }
        }

        /// <summary>
        /// API Port for HTTP endpoints
        /// </summary>
        public const int ApiPort = 5050;

        /// <summary>
        /// Gets the full version string with product name
        /// </summary>
        public static string GetFullVersionString()
        {
            return $"{DisplayName} v{Version}";
        }

        /// <summary>
        /// Gets build configuration (Debug/Release)
        /// </summary>
        public static string BuildConfiguration
        {
            get
            {
#if DEBUG
                return "Debug";
#else
                return "Release";
#endif
            }
        }
    }
}


# === END OF FILE: src\CamBridge.Service\ServiceInfo.cs ===


# ============================================================================
# FILE: src\CamBridge.Service\Worker.cs
# SIZE: 10.4 KB
# MODIFIED: 2025-06-10 22:56
# ============================================================================

// src/CamBridge.Service/Worker.cs
// Version: 0.7.5+tools
// Description: Main worker service that orchestrates pipeline processing
// Copyright: © 2025 Claude's Improbably Reliable Software Solutions

using System;
using System.Diagnostics;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using CamBridge.Core;
using CamBridge.Infrastructure.Services;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Options;

namespace CamBridge.Service
{
    /// <summary>
    /// Main worker service that manages the pipeline infrastructure
    /// </summary>
    public class Worker : BackgroundService
    {
        private readonly ILogger<Worker> _logger;
        private readonly PipelineManager _pipelineManager;
        private readonly IOptionsMonitor<CamBridgeSettingsV2> _settingsMonitor;
        private readonly IHostApplicationLifetime _lifetime;
        private Timer? _statusTimer;

        public Worker(
            ILogger<Worker> logger,
            PipelineManager pipelineManager,
            IOptionsMonitor<CamBridgeSettingsV2> settingsMonitor,
            IHostApplicationLifetime lifetime)
        {
            _logger = logger ?? throw new ArgumentNullException(nameof(logger));
            _pipelineManager = pipelineManager ?? throw new ArgumentNullException(nameof(pipelineManager));
            _settingsMonitor = settingsMonitor ?? throw new ArgumentNullException(nameof(settingsMonitor));
            _lifetime = lifetime ?? throw new ArgumentNullException(nameof(lifetime));
        }

        protected override async Task ExecuteAsync(CancellationToken stoppingToken)
        {
            try
            {
                _logger.LogInformation("{ServiceName} starting",
                    ServiceInfo.GetFullVersionString());

                var settings = _settingsMonitor.CurrentValue;

                // Startup delay if configured
                if (settings.Service.StartupDelaySeconds > 0)
                {
                    _logger.LogInformation("Waiting {Delay} seconds before starting...",
                        settings.Service.StartupDelaySeconds);
                    await Task.Delay(TimeSpan.FromSeconds(settings.Service.StartupDelaySeconds), stoppingToken);
                }

                // Start all configured pipelines
                await _pipelineManager.StartAsync(stoppingToken);

                // Get initial status
                var statuses = _pipelineManager.GetPipelineStatuses();
                _logger.LogInformation("CamBridge Service started with {PipelineCount} pipelines",
                    statuses.Count);

                // Log active pipelines
                foreach (var status in statuses.Where(s => s.Value.IsActive))
                {
                    _logger.LogInformation("Pipeline '{PipelineName}' active - watching {FolderCount} folders",
                        status.Value.Name, status.Value.WatchedFolders.Count);

                    foreach (var folder in status.Value.WatchedFolders)
                    {
                        _logger.LogInformation("  → Watching: {Path}", folder);
                    }
                }

                // Setup status reporting timer
                _statusTimer = new Timer(
                    ReportStatus,
                    null,
                    TimeSpan.FromSeconds(30), // Initial delay
                    TimeSpan.FromSeconds(30)  // Report every 30 seconds
                );

                // Keep service running
                while (!stoppingToken.IsCancellationRequested)
                {
                    await Task.Delay(1000, stoppingToken);

                    // Check if any pipeline has critical errors
                    CheckPipelineHealth();
                }
            }
            catch (Exception ex)
            {
                _logger.LogCritical(ex, "Fatal error in CamBridge Service");
                throw;
            }
            finally
            {
                _logger.LogInformation("CamBridge Service shutting down");

                // Stop status timer
                _statusTimer?.Dispose();

                // Stop all pipelines
                try
                {
                    await _pipelineManager.StopAsync();
                }
                catch (Exception ex)
                {
                    _logger.LogError(ex, "Error stopping pipeline manager");
                }

                // Final statistics
                ReportFinalStatistics();

                _logger.LogInformation("CamBridge Service stopped");
            }
        }

        private void ReportStatus(object? state)
        {
            try
            {
                var statuses = _pipelineManager.GetPipelineStatuses();

                // Summary statistics
                var totalQueued = statuses.Sum(s => s.Value.QueueLength);
                var totalActive = statuses.Sum(s => s.Value.ActiveProcessing);
                var totalProcessed = statuses.Sum(s => s.Value.TotalProcessed);
                var totalSuccessful = statuses.Sum(s => s.Value.TotalSuccessful);
                var totalFailed = statuses.Sum(s => s.Value.TotalFailed);

                _logger.LogInformation(
                    "Service Status - Pipelines: {PipelineCount} ({ActiveCount} active), " +
                    "Queue: {QueueLength}, Processing: {ActiveProcessing}, " +
                    "Total: {TotalProcessed} (Success: {Success}, Failed: {Failed})",
                    statuses.Count,
                    statuses.Count(s => s.Value.IsActive),
                    totalQueued,
                    totalActive,
                    totalProcessed,
                    totalSuccessful,
                    totalFailed);

                // Report per-pipeline status if multiple pipelines
                if (statuses.Count > 1)
                {
                    foreach (var pipeline in statuses.Where(s => s.Value.IsActive))
                    {
                        if (pipeline.Value.TotalProcessed > 0 || pipeline.Value.QueueLength > 0)
                        {
                            _logger.LogInformation(
                                "  Pipeline '{Name}': Queue: {Queue}, Active: {Active}, " +
                                "Processed: {Processed} (Success: {Success}, Failed: {Failed})",
                                pipeline.Value.Name,
                                pipeline.Value.QueueLength,
                                pipeline.Value.ActiveProcessing,
                                pipeline.Value.TotalProcessed,
                                pipeline.Value.TotalSuccessful,
                                pipeline.Value.TotalFailed);
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error reporting status");
            }
        }

        private void CheckPipelineHealth()
        {
            try
            {
                var statuses = _pipelineManager.GetPipelineStatuses();

                foreach (var pipeline in statuses)
                {
                    // Check for high failure rates
                    if (pipeline.Value.TotalProcessed > 100)
                    {
                        var failureRate = (double)pipeline.Value.TotalFailed / pipeline.Value.TotalProcessed;
                        if (failureRate > 0.5) // 50% failure rate
                        {
                            _logger.LogWarning(
                                "Pipeline '{PipelineName}' has high failure rate: {FailureRate:P}",
                                pipeline.Value.Name, failureRate);
                        }
                    }

                    // Check for large queue backlogs
                    if (pipeline.Value.QueueLength > 1000)
                    {
                        _logger.LogWarning(
                            "Pipeline '{PipelineName}' has large queue backlog: {QueueLength} files",
                            pipeline.Value.Name, pipeline.Value.QueueLength);
                    }
                }
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error checking pipeline health");
            }
        }

        private void ReportFinalStatistics()
        {
            try
            {
                var statuses = _pipelineManager.GetPipelineStatuses();

                _logger.LogInformation("=== Final Pipeline Statistics ===");

                foreach (var pipeline in statuses)
                {
                    if (pipeline.Value.TotalProcessed > 0)
                    {
                        var successRate = pipeline.Value.TotalProcessed > 0
                            ? (double)pipeline.Value.TotalSuccessful / pipeline.Value.TotalProcessed * 100
                            : 0;

                        _logger.LogInformation(
                            "Pipeline '{Name}': Total: {Total}, Success: {Success} ({SuccessRate:F1}%), Failed: {Failed}",
                            pipeline.Value.Name,
                            pipeline.Value.TotalProcessed,
                            pipeline.Value.TotalSuccessful,
                            successRate,
                            pipeline.Value.TotalFailed);
                    }
                }

                var totalProcessed = statuses.Sum(s => s.Value.TotalProcessed);
                var totalSuccessful = statuses.Sum(s => s.Value.TotalSuccessful);
                var totalFailed = statuses.Sum(s => s.Value.TotalFailed);

                if (totalProcessed > 0)
                {
                    _logger.LogInformation(
                        "Overall: Total: {Total}, Success: {Success}, Failed: {Failed}",
                        totalProcessed, totalSuccessful, totalFailed);
                }
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error reporting final statistics");
            }
        }

        public override async Task StopAsync(CancellationToken cancellationToken)
        {
            _logger.LogInformation("CamBridge Service stop requested");
            await base.StopAsync(cancellationToken);
        }
    }
}


# === END OF FILE: src\CamBridge.Service\Worker.cs ===


# ============================================================================
# FILE: src\CamBridge.Service\appsettings.Development.json
# SIZE: 1.6 KB
# MODIFIED: 2025-06-13 01:15
# ============================================================================

{
  "CamBridge": {
    "Service": {
      "StartupDelaySeconds": 0
    },
    "Pipelines": [
      {
        "Id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
        "WatchSettings": {
          "Path": "C:\\CamBridge\\Test\\Input\\Radiology"
        },
        "ProcessingOptions": {
          "ProcessExistingOnStartup": false,
          "ErrorFolder": "C:\\CamBridge\\Test\\Errors\\Radiology",
          "ArchiveFolder": "C:\\CamBridge\\Test\\Output\\Radiology",
          "BackupFolder": "C:\\CamBridge\\Test\\Archive\\Radiology",
          "MaxConcurrentProcessing": 1
        }
      },
      {
        "Id": "f9e8d7c6-b5a4-3210-fedc-ba0987654321",
        "WatchSettings": {
          "Path": "C:\\CamBridge\\Test\\Input\\Emergency"
        },
        "ProcessingOptions": {
          "ProcessExistingOnStartup": false,
          "ErrorFolder": "C:\\CamBridge\\Test\\Errors\\Emergency",
          "ArchiveFolder": "C:\\CamBridge\\Test\\Output\\Emergency",
          "BackupFolder": "C:\\CamBridge\\Test\\Archive\\Emergency",
          "MaxConcurrentProcessing": 2
        }
      }
    ],
    "DefaultProcessingOptions": {
      "ProcessExistingOnStartup": false,
      "MaxConcurrentProcessing": 1
    },
    "Logging": {
      "LogLevel": "Debug",
      "LogFolder": "C:\\CamBridge\\Test\\Logs"
    },
    "ExifToolPath": "..\\..\\..\\Tools\\exiftool.exe"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Debug",
      "Microsoft": "Information",
      "Microsoft.Hosting.Lifetime": "Information",
      "CamBridge": "Trace"
    }
  }
}


# === END OF FILE: src\CamBridge.Service\appsettings.Development.json ===


# ============================================================================
# FILE: src\CamBridge.Service\appsettings.json
# SIZE: 6.9 KB
# MODIFIED: 2025-06-13 01:16
# ============================================================================

{
  "CamBridge": {
    "Version": "2.0",
    "Service": {
      "ServiceName": "CamBridgeService",
      "DisplayName": "CamBridge JPEG to DICOM Converter",
      "Description": "Monitors folders for JPEG files from Ricoh cameras and converts them to DICOM format",
      "ApiPort": 5111,
      "EnableHealthChecks": true,
      "HealthCheckInterval": "00:01:00",
      "StartupDelaySeconds": 5,
      "FileProcessingDelayMs": 500
    },
    "Pipelines": [
      {
        "Id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
        "Name": "Radiology Pipeline",
        "Description": "Standard radiology workflow for chest X-rays",
        "Enabled": true,
        "WatchSettings": {
          "Path": "C:\\CamBridge\\Watch\\Radiology",
          "FilePattern": "*.jpg;*.jpeg",
          "IncludeSubdirectories": false,
          "MinimumFileAgeSeconds": 2
        },
        "ProcessingOptions": {
          "SuccessAction": "Archive",
          "FailureAction": "MoveToError",
          "DeleteSourceAfterSuccess": false,
          "ProcessExistingOnStartup": true,
          "MaxRetryAttempts": 3,
          "RetryDelaySeconds": 30,
          "ErrorFolder": "C:\\CamBridge\\Errors\\Radiology",
          "ArchiveFolder": "C:\\CamBridge\\Output\\Radiology",
          "BackupFolder": "C:\\CamBridge\\Archive\\Radiology",
          "CreateBackup": true,
          "MaxConcurrentProcessing": 5,
          "OutputOrganization": "ByPatientAndDate",
          "OutputFilePattern": "{PatientId}_{StudyDate}_{Counter:0000}.dcm"
        },
        "MappingSetId": "00000000-0000-0000-0000-000000000001"
      },
      {
        "Id": "f9e8d7c6-b5a4-3210-fedc-ba0987654321",
        "Name": "Emergency Pipeline",
        "Description": "High-priority emergency imaging workflow",
        "Enabled": true,
        "WatchSettings": {
          "Path": "C:\\CamBridge\\Watch\\Emergency",
          "FilePattern": "*.jpg",
          "IncludeSubdirectories": false,
          "MinimumFileAgeSeconds": 1
        },
        "ProcessingOptions": {
          "SuccessAction": "Archive",
          "FailureAction": "MoveToError",
          "DeleteSourceAfterSuccess": false,
          "ProcessExistingOnStartup": true,
          "MaxRetryAttempts": 5,
          "RetryDelaySeconds": 10,
          "ErrorFolder": "C:\\CamBridge\\Errors\\Emergency",
          "ArchiveFolder": "C:\\CamBridge\\Output\\Emergency",
          "BackupFolder": "C:\\CamBridge\\Archive\\Emergency",
          "CreateBackup": false,
          "MaxConcurrentProcessing": 10,
          "OutputOrganization": "None",
          "OutputFilePattern": "EMRG_{PatientId}_{Counter:0000}.dcm"
        },
        "MappingSetId": "00000000-0000-0000-0000-000000000001"
      }
    ],
    "MappingSets": [
      {
        "Id": "00000000-0000-0000-0000-000000000001",
        "Name": "Ricoh Default",
        "Description": "Standard mapping for Ricoh G900 II cameras with QRBridge",
        "IsSystemDefault": true,
        "Rules": [
          {
            "Name": "PatientName",
            "Description": "Patient's full name",
            "SourceType": "QRBridge",
            "SourceField": "name",
            "DicomTag": "(0010,0010)",
            "Transform": "None",
            "Required": true,
            "ValueRepresentation": "PN"
          },
          {
            "Name": "PatientID",
            "Description": "Patient identifier",
            "SourceType": "QRBridge",
            "SourceField": "examid",
            "DicomTag": "(0010,0020)",
            "Transform": "None",
            "Required": true,
            "ValueRepresentation": "LO"
          },
          {
            "Name": "PatientBirthDate",
            "Description": "Patient's date of birth",
            "SourceType": "QRBridge",
            "SourceField": "birthdate",
            "DicomTag": "(0010,0030)",
            "Transform": "DateToDicom",
            "Required": false,
            "ValueRepresentation": "DA"
          },
          {
            "Name": "PatientSex",
            "Description": "Patient's sex",
            "SourceType": "QRBridge",
            "SourceField": "gender",
            "DicomTag": "(0010,0040)",
            "Transform": "MapGender",
            "Required": false,
            "DefaultValue": "O",
            "ValueRepresentation": "CS"
          },
          {
            "Name": "StudyDescription",
            "Description": "Description of the study",
            "SourceType": "QRBridge",
            "SourceField": "comment",
            "DicomTag": "(0008,1030)",
            "Transform": "None",
            "Required": false,
            "ValueRepresentation": "LO"
          },
          {
            "Name": "StudyDate",
            "Description": "Date the study was performed",
            "SourceType": "EXIF",
            "SourceField": "DateTimeOriginal",
            "DicomTag": "(0008,0020)",
            "Transform": "ExtractDate",
            "Required": true,
            "ValueRepresentation": "DA"
          },
          {
            "Name": "StudyTime",
            "Description": "Time the study was performed",
            "SourceType": "EXIF",
            "SourceField": "DateTimeOriginal",
            "DicomTag": "(0008,0030)",
            "Transform": "ExtractTime",
            "Required": true,
            "ValueRepresentation": "TM"
          }
        ]
      }
    ],
    "GlobalDicomSettings": {
      "ImplementationClassUid": "1.2.276.0.7230010.3.0.3.6.4",
      "ImplementationVersionName": "CAMBRIDGE_0710",
      "SourceApplicationEntityTitle": "CAMBRIDGE",
      "Modality": "OT",
      "InstitutionName": "CamBridge Medical Imaging",
      "InstitutionDepartment": "",
      "StationName": "",
      "ValidateAfterCreation": true
    },
    "DefaultProcessingOptions": {
      "SuccessAction": "Archive",
      "FailureAction": "MoveToError",
      "ArchiveFolder": "C:\\CamBridge\\Output",
      "ErrorFolder": "C:\\CamBridge\\Errors",
      "BackupFolder": "C:\\CamBridge\\Archive",
      "CreateBackup": true,
      "MaxConcurrentProcessing": 5,
      "RetryOnFailure": true,
      "MaxRetryAttempts": 3,
      "RetryDelaySeconds": 30,
      "OutputOrganization": "ByPatientAndDate",
      "ProcessExistingOnStartup": true,
      "OutputFilePattern": "{PatientId}_{StudyDate}_{Counter:0000}.dcm"
    },
    "Logging": {
      "LogLevel": "Information",
      "LogFolder": "C:\\ProgramData\\CamBridge\\Logs",
      "EnableFileLogging": true,
      "EnableEventLog": true,
      "MaxLogFileSizeMB": 10,
      "MaxLogFiles": 10
    },
    "Notifications": {
      "Enabled": true,
      "DeadLetterThreshold": 100,
      "LogNotifications": true,
      "EventLog": {
        "Enabled": true,
        "LogName": "Application",
        "SourceName": "CamBridge"
      }
    },
    "ExifToolPath": "Tools\\exiftool.exe"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information",
      "CamBridge": "Information"
    }
  }
}

# === END OF FILE: src\CamBridge.Service\appsettings.json ===


# ============================================================================
# FILE: src\CamBridge.Service\mappings.json
# SIZE: 2.4 KB
# MODIFIED: 2025-06-01 22:37
# ============================================================================

{
  "version": "1.0",
  "description": "CamBridge EXIF to DICOM mapping configuration for Ricoh G900 II with QRBridge",
  "mappings": [
    {
      "name": "PatientName",
      "sourceType": "QRBridge",
      "sourceField": "name",
      "targetTag": "(0010,0010)",
      "transform": "None",
      "required": true
    },
    {
      "name": "PatientID",
      "sourceType": "QRBridge",
      "sourceField": "patientid",
      "targetTag": "(0010,0020)",
      "transform": "None",
      "required": true
    },
    {
      "name": "PatientBirthDate",
      "sourceType": "QRBridge",
      "sourceField": "birthdate",
      "targetTag": "(0010,0030)",
      "transform": "DateToDicom",
      "required": false
    },
    {
      "name": "PatientSex",
      "sourceType": "QRBridge",
      "sourceField": "gender",
      "targetTag": "(0010,0040)",
      "transform": "GenderToDicom",
      "required": false,
      "defaultValue": "O"
    },
    {
      "name": "StudyDescription",
      "sourceType": "QRBridge",
      "sourceField": "comment",
      "targetTag": "(0008,1030)",
      "transform": "None",
      "required": false
    },
    {
      "name": "StudyID",
      "sourceType": "QRBridge",
      "sourceField": "examid",
      "targetTag": "(0020,0010)",
      "transform": "TruncateTo16",
      "required": false
    },
    {
      "name": "Manufacturer",
      "sourceType": "EXIF",
      "sourceField": "Make",
      "targetTag": "(0008,0070)",
      "transform": "None",
      "required": false
    },
    {
      "name": "ManufacturerModelName",
      "sourceType": "EXIF",
      "sourceField": "Model",
      "targetTag": "(0008,1090)",
      "transform": "None",
      "required": false
    },
    {
      "name": "SoftwareVersions",
      "sourceType": "EXIF",
      "sourceField": "Software",
      "targetTag": "(0018,1020)",
      "transform": "None",
      "required": false
    },
    {
      "name": "AcquisitionDateTime",
      "sourceType": "EXIF",
      "sourceField": "DateTimeOriginal",
      "targetTag": "(0008,002A)",
      "transform": "DateToDicom",
      "required": false
    },
    {
      "name": "PatientComments",
      "sourceType": "QRBridge",
      "sourceField": "comment",
      "targetTag": "(0010,4000)",
      "transform": "None",
      "required": false
    }
  ]
}


# === END OF FILE: src\CamBridge.Service\mappings.json ===


# ============================================================================
# FILE: src\CamBridge.Service\obj\CamBridge.Service.csproj.nuget.dgspec.json
# SIZE: 12.4 KB
# MODIFIED: 2025-06-13 17:14
# ============================================================================

{
  "format": 1,
  "restore": {
    "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Service\\CamBridge.Service.csproj": {}
  },
  "projects": {
    "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Core\\CamBridge.Core.csproj": {
      "version": "0.7.10",
      "restore": {
        "projectUniqueName": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Core\\CamBridge.Core.csproj",
        "projectName": "CamBridge.Core",
        "projectPath": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Core\\CamBridge.Core.csproj",
        "packagesPath": "C:\\Users\\oliver.stern\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\oliver.stern\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "fo-dicom": {
              "target": "Package",
              "version": "[5.1.2, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "downloadDependencies": [
            {
              "name": "Microsoft.AspNetCore.App.Runtime.win-x64",
              "version": "[8.0.16, 8.0.16]"
            },
            {
              "name": "Microsoft.NETCore.App.Runtime.win-x64",
              "version": "[8.0.16, 8.0.16]"
            },
            {
              "name": "Microsoft.WindowsDesktop.App.Runtime.win-x64",
              "version": "[8.0.16, 8.0.16]"
            }
          ],
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.300/PortableRuntimeIdentifierGraph.json"
        }
      },
      "runtimes": {
        "win-x64": {
          "#import": []
        }
      }
    },
    "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Infrastructure\\CamBridge.Infrastructure.csproj": {
      "version": "0.7.10",
      "restore": {
        "projectUniqueName": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Infrastructure\\CamBridge.Infrastructure.csproj",
        "projectName": "CamBridge.Infrastructure",
        "projectPath": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Infrastructure\\CamBridge.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\oliver.stern\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\oliver.stern\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Core\\CamBridge.Core.csproj": {
                "projectPath": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Core\\CamBridge.Core.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "MetadataExtractor": {
              "target": "Package",
              "version": "[2.8.1, )"
            },
            "Microsoft.Extensions.Configuration.Binder": {
              "target": "Package",
              "version": "[8.0.0, )"
            },
            "Microsoft.Extensions.DependencyInjection.Abstractions": {
              "target": "Package",
              "version": "[9.0.5, )"
            },
            "Microsoft.Extensions.Hosting.Abstractions": {
              "target": "Package",
              "version": "[9.0.5, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.5, )"
            },
            "Microsoft.Extensions.Logging.Configuration": {
              "target": "Package",
              "version": "[8.0.0, )"
            },
            "Microsoft.Extensions.Options.ConfigurationExtensions": {
              "target": "Package",
              "version": "[8.0.0, )"
            },
            "System.Diagnostics.EventLog": {
              "target": "Package",
              "version": "[8.0.0, )"
            },
            "System.Drawing.Common": {
              "target": "Package",
              "version": "[8.0.10, )"
            },
            "fo-dicom": {
              "target": "Package",
              "version": "[5.2.2, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "downloadDependencies": [
            {
              "name": "Microsoft.AspNetCore.App.Runtime.win-x64",
              "version": "[8.0.16, 8.0.16]"
            },
            {
              "name": "Microsoft.NETCore.App.Runtime.win-x64",
              "version": "[8.0.16, 8.0.16]"
            },
            {
              "name": "Microsoft.WindowsDesktop.App.Runtime.win-x64",
              "version": "[8.0.16, 8.0.16]"
            }
          ],
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.300/PortableRuntimeIdentifierGraph.json"
        }
      },
      "runtimes": {
        "win-x64": {
          "#import": []
        }
      }
    },
    "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Service\\CamBridge.Service.csproj": {
      "version": "0.7.10",
      "restore": {
        "projectUniqueName": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Service\\CamBridge.Service.csproj",
        "projectName": "CamBridge.Service",
        "projectPath": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Service\\CamBridge.Service.csproj",
        "packagesPath": "C:\\Users\\oliver.stern\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Service\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\oliver.stern\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Core\\CamBridge.Core.csproj": {
                "projectPath": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Core\\CamBridge.Core.csproj"
              },
              "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Infrastructure\\CamBridge.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Infrastructure\\CamBridge.Infrastructure.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "Microsoft.Extensions.Hosting.WindowsServices": {
              "target": "Package",
              "version": "[8.0.0, )"
            },
            "Serilog.AspNetCore": {
              "target": "Package",
              "version": "[8.0.1, )"
            },
            "Serilog.Sinks.Console": {
              "target": "Package",
              "version": "[5.0.1, )"
            },
            "Serilog.Sinks.EventLog": {
              "target": "Package",
              "version": "[4.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[5.0.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "downloadDependencies": [
            {
              "name": "Microsoft.AspNetCore.App.Runtime.win-x64",
              "version": "[8.0.16, 8.0.16]"
            },
            {
              "name": "Microsoft.NETCore.App.Crossgen2.win-x64",
              "version": "[8.0.16, 8.0.16]"
            },
            {
              "name": "Microsoft.NETCore.App.Runtime.win-x64",
              "version": "[8.0.16, 8.0.16]"
            },
            {
              "name": "Microsoft.WindowsDesktop.App.Runtime.win-x64",
              "version": "[8.0.16, 8.0.16]"
            }
          ],
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.300/PortableRuntimeIdentifierGraph.json"
        }
      },
      "runtimes": {
        "win-x64": {
          "#import": []
        }
      }
    }
  }
}

# === END OF FILE: src\CamBridge.Service\obj\CamBridge.Service.csproj.nuget.dgspec.json ===


# ============================================================================
# FILE: src\CamBridge.Service\obj\project.assets.json
# SIZE: 162.7 KB
# MODIFIED: 2025-06-13 17:13
# ============================================================================

{
  "version": 3,
  "targets": {
    "net8.0-windows7.0": {
      "CommunityToolkit.HighPerformance/8.3.2": {
        "type": "package",
        "compile": {
          "lib/net8.0/CommunityToolkit.HighPerformance.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/CommunityToolkit.HighPerformance.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "fo-dicom/5.2.2": {
        "type": "package",
        "dependencies": {
          "CommunityToolkit.HighPerformance": "8.3.2",
          "Microsoft.Bcl.AsyncInterfaces": "8.0.0",
          "Microsoft.Bcl.HashCode": "1.1.1",
          "Microsoft.Extensions.DependencyInjection": "6.0.1",
          "Microsoft.Extensions.Logging": "6.0.0",
          "Microsoft.Extensions.Options": "6.0.0",
          "System.Buffers": "4.5.1",
          "System.Text.Encoding.CodePages": "6.0.1",
          "System.Text.Encodings.Web": "8.0.0",
          "System.Text.Json": "8.0.5",
          "System.Threading.Channels": "6.0.0"
        },
        "compile": {
          "lib/netstandard2.0/fo-dicom.core.dll": {}
        },
        "runtime": {
          "lib/netstandard2.0/fo-dicom.core.dll": {}
        }
      },
      "MetadataExtractor/2.8.1": {
        "type": "package",
        "dependencies": {
          "System.Text.Encoding.CodePages": "4.5.1",
          "XmpCore": "6.1.10.1"
        },
        "compile": {
          "lib/netstandard2.0/MetadataExtractor.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/MetadataExtractor.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Bcl.AsyncInterfaces/8.0.0": {
        "type": "package",
        "compile": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Bcl.HashCode/1.1.1": {
        "type": "package",
        "compile": {
          "ref/netcoreapp2.1/Microsoft.Bcl.HashCode.dll": {}
        },
        "runtime": {
          "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Extensions.Configuration/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.5": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.5"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Binder/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Binder.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Binder.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.Binder.targets": {}
        }
      },
      "Microsoft.Extensions.Configuration.CommandLine/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.CommandLine.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.CommandLine.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.EnvironmentVariables/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.FileExtensions/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Physical": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.FileExtensions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.FileExtensions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Json/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.FileExtensions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "System.Text.Json": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Json.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.UserSecrets/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.Json": "8.0.0",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Physical": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.UserSecrets.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.UserSecrets.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/Microsoft.Extensions.Configuration.UserSecrets.props": {},
          "buildTransitive/net6.0/Microsoft.Extensions.Configuration.UserSecrets.targets": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.5": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyModel/8.0.0": {
        "type": "package",
        "dependencies": {
          "System.Text.Encodings.Web": "8.0.0",
          "System.Text.Json": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Diagnostics/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Diagnostics.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Diagnostics.Abstractions/9.0.5": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.5",
          "Microsoft.Extensions.Options": "9.0.5",
          "System.Diagnostics.DiagnosticSource": "9.0.5"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.FileProviders.Abstractions/9.0.5": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.5"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.FileProviders.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.FileProviders.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.FileProviders.Physical/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileSystemGlobbing": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.FileProviders.Physical.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.FileProviders.Physical.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.FileSystemGlobbing/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.FileSystemGlobbing.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.FileSystemGlobbing.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Hosting/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.Binder": "8.0.0",
          "Microsoft.Extensions.Configuration.CommandLine": "8.0.0",
          "Microsoft.Extensions.Configuration.EnvironmentVariables": "8.0.0",
          "Microsoft.Extensions.Configuration.FileExtensions": "8.0.0",
          "Microsoft.Extensions.Configuration.Json": "8.0.0",
          "Microsoft.Extensions.Configuration.UserSecrets": "8.0.0",
          "Microsoft.Extensions.DependencyInjection": "8.0.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Diagnostics": "8.0.0",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Physical": "8.0.0",
          "Microsoft.Extensions.Hosting.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging.Configuration": "8.0.0",
          "Microsoft.Extensions.Logging.Console": "8.0.0",
          "Microsoft.Extensions.Logging.Debug": "8.0.0",
          "Microsoft.Extensions.Logging.EventLog": "8.0.0",
          "Microsoft.Extensions.Logging.EventSource": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Hosting.Abstractions/9.0.5": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.5",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.5",
          "Microsoft.Extensions.Diagnostics.Abstractions": "9.0.5",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.5",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.5"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Hosting.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Hosting.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Hosting.WindowsServices/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Hosting": "8.0.0",
          "Microsoft.Extensions.Logging.EventLog": "8.0.0",
          "System.ServiceProcess.ServiceController": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Hosting.WindowsServices.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Hosting.WindowsServices.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.5": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.5",
          "System.Diagnostics.DiagnosticSource": "9.0.5"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets": {}
        }
      },
      "Microsoft.Extensions.Logging.Configuration/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.Binder": "8.0.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Configuration.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Configuration.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Console/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging.Configuration": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0",
          "System.Text.Json": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Console.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Console.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Debug/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Debug.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Debug.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.EventLog/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0",
          "System.Diagnostics.EventLog": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventLog.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventLog.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.EventSource/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0",
          "System.Text.Json": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventSource.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventSource.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Options/9.0.5": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.5",
          "Microsoft.Extensions.Primitives": "9.0.5"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Options.targets": {}
        }
      },
      "Microsoft.Extensions.Options.ConfigurationExtensions/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.Binder": "8.0.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Primitives/9.0.5": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Win32.SystemEvents/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Win32.SystemEvents.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Win32.SystemEvents.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win/lib/net8.0/Microsoft.Win32.SystemEvents.dll": {
            "assetType": "runtime",
            "rid": "win"
          }
        }
      },
      "Serilog/4.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Serilog.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Serilog.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.AspNetCore/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Serilog": "3.1.1",
          "Serilog.Extensions.Hosting": "8.0.0",
          "Serilog.Extensions.Logging": "8.0.0",
          "Serilog.Formatting.Compact": "2.0.0",
          "Serilog.Settings.Configuration": "8.0.0",
          "Serilog.Sinks.Console": "5.0.0",
          "Serilog.Sinks.Debug": "2.0.0",
          "Serilog.Sinks.File": "5.0.0"
        },
        "compile": {
          "lib/net8.0/Serilog.AspNetCore.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Serilog.AspNetCore.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "Serilog.Extensions.Hosting/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Hosting.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Serilog": "3.1.1",
          "Serilog.Extensions.Logging": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Serilog.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Serilog.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Extensions.Logging/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Logging": "8.0.0",
          "Serilog": "3.1.1"
        },
        "compile": {
          "lib/net8.0/Serilog.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Serilog.Extensions.Logging.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Formatting.Compact/2.0.0": {
        "type": "package",
        "dependencies": {
          "Serilog": "3.1.0"
        },
        "compile": {
          "lib/net7.0/Serilog.Formatting.Compact.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/Serilog.Formatting.Compact.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Settings.Configuration/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Binder": "8.0.0",
          "Microsoft.Extensions.DependencyModel": "8.0.0",
          "Serilog": "3.1.1"
        },
        "compile": {
          "lib/net8.0/Serilog.Settings.Configuration.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Serilog.Settings.Configuration.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Sinks.Console/5.0.1": {
        "type": "package",
        "dependencies": {
          "Serilog": "3.1.1"
        },
        "compile": {
          "lib/net7.0/Serilog.Sinks.Console.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/Serilog.Sinks.Console.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Sinks.Debug/2.0.0": {
        "type": "package",
        "dependencies": {
          "Serilog": "2.10.0"
        },
        "compile": {
          "lib/netstandard2.1/Serilog.Sinks.Debug.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.1/Serilog.Sinks.Debug.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Sinks.EventLog/4.0.0": {
        "type": "package",
        "dependencies": {
          "Serilog": "4.0.0",
          "System.Diagnostics.EventLog": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Serilog.Sinks.EventLog.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Serilog.Sinks.EventLog.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Sinks.File/5.0.0": {
        "type": "package",
        "dependencies": {
          "Serilog": "2.10.0"
        },
        "compile": {
          "lib/net5.0/Serilog.Sinks.File.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net5.0/Serilog.Sinks.File.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "System.Buffers/4.5.1": {
        "type": "package",
        "compile": {
          "ref/netcoreapp2.0/_._": {}
        },
        "runtime": {
          "lib/netcoreapp2.0/_._": {}
        }
      },
      "System.Diagnostics.DiagnosticSource/9.0.5": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "System.Diagnostics.EventLog/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Diagnostics.EventLog.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Diagnostics.EventLog.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.Messages.dll": {
            "assetType": "runtime",
            "rid": "win"
          },
          "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.dll": {
            "assetType": "runtime",
            "rid": "win"
          }
        }
      },
      "System.Drawing.Common/8.0.10": {
        "type": "package",
        "dependencies": {
          "Microsoft.Win32.SystemEvents": "8.0.0"
        },
        "compile": {
          "lib/net8.0/System.Drawing.Common.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Drawing.Common.dll": {
            "related": ".pdb;.xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.ServiceProcess.ServiceController/8.0.0": {
        "type": "package",
        "dependencies": {
          "System.Diagnostics.EventLog": "8.0.0"
        },
        "compile": {
          "lib/net8.0/System.ServiceProcess.ServiceController.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.ServiceProcess.ServiceController.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win/lib/net8.0/System.ServiceProcess.ServiceController.dll": {
            "assetType": "runtime",
            "rid": "win"
          }
        }
      },
      "System.Text.Encoding.CodePages/6.0.1": {
        "type": "package",
        "compile": {
          "lib/net6.0/System.Text.Encoding.CodePages.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Text.Encoding.CodePages.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win/lib/net6.0/System.Text.Encoding.CodePages.dll": {
            "assetType": "runtime",
            "rid": "win"
          }
        }
      },
      "System.Text.Encodings.Web/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll": {
            "assetType": "runtime",
            "rid": "browser"
          }
        }
      },
      "System.Text.Json/8.0.5": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Text.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Text.Json.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/System.Text.Json.targets": {}
        }
      },
      "System.Threading.Channels/6.0.0": {
        "type": "package",
        "compile": {
          "lib/net6.0/System.Threading.Channels.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Threading.Channels.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "XmpCore/6.1.10.1": {
        "type": "package",
        "compile": {
          "lib/netstandard2.0/XmpCore.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/XmpCore.dll": {
            "related": ".xml"
          }
        }
      },
      "CamBridge.Core/0.7.10": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v8.0",
        "dependencies": {
          "fo-dicom": "5.1.2"
        },
        "compile": {
          "bin/placeholder/CamBridge.Core.dll": {}
        },
        "runtime": {
          "bin/placeholder/CamBridge.Core.dll": {}
        }
      },
      "CamBridge.Infrastructure/0.7.10": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v8.0",
        "dependencies": {
          "CamBridge.Core": "0.7.10",
          "MetadataExtractor": "2.8.1",
          "Microsoft.Extensions.Configuration.Binder": "8.0.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.5",
          "Microsoft.Extensions.Hosting.Abstractions": "9.0.5",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.5",
          "Microsoft.Extensions.Logging.Configuration": "8.0.0",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "8.0.0",
          "System.Diagnostics.EventLog": "8.0.0",
          "System.Drawing.Common": "8.0.10",
          "fo-dicom": "5.2.2"
        },
        "compile": {
          "bin/placeholder/CamBridge.Infrastructure.dll": {}
        },
        "runtime": {
          "bin/placeholder/CamBridge.Infrastructure.dll": {}
        }
      }
    },
    "net8.0-windows7.0/win-x64": {
      "CommunityToolkit.HighPerformance/8.3.2": {
        "type": "package",
        "compile": {
          "lib/net8.0/CommunityToolkit.HighPerformance.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/CommunityToolkit.HighPerformance.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "fo-dicom/5.2.2": {
        "type": "package",
        "dependencies": {
          "CommunityToolkit.HighPerformance": "8.3.2",
          "Microsoft.Bcl.AsyncInterfaces": "8.0.0",
          "Microsoft.Bcl.HashCode": "1.1.1",
          "Microsoft.Extensions.DependencyInjection": "6.0.1",
          "Microsoft.Extensions.Logging": "6.0.0",
          "Microsoft.Extensions.Options": "6.0.0",
          "System.Buffers": "4.5.1",
          "System.Text.Encoding.CodePages": "6.0.1",
          "System.Text.Encodings.Web": "8.0.0",
          "System.Text.Json": "8.0.5",
          "System.Threading.Channels": "6.0.0"
        },
        "compile": {
          "lib/netstandard2.0/fo-dicom.core.dll": {}
        },
        "runtime": {
          "lib/netstandard2.0/fo-dicom.core.dll": {}
        }
      },
      "MetadataExtractor/2.8.1": {
        "type": "package",
        "dependencies": {
          "System.Text.Encoding.CodePages": "4.5.1",
          "XmpCore": "6.1.10.1"
        },
        "compile": {
          "lib/netstandard2.0/MetadataExtractor.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/MetadataExtractor.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Bcl.AsyncInterfaces/8.0.0": {
        "type": "package",
        "compile": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Bcl.HashCode/1.1.1": {
        "type": "package",
        "compile": {
          "ref/netcoreapp2.1/Microsoft.Bcl.HashCode.dll": {}
        },
        "runtime": {
          "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Extensions.Configuration/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.5": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.5"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Binder/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Binder.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Binder.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.Binder.targets": {}
        }
      },
      "Microsoft.Extensions.Configuration.CommandLine/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.CommandLine.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.CommandLine.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.EnvironmentVariables/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.FileExtensions/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Physical": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.FileExtensions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.FileExtensions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Json/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.FileExtensions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "System.Text.Json": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Json.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.UserSecrets/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.Json": "8.0.0",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Physical": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.UserSecrets.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.UserSecrets.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/Microsoft.Extensions.Configuration.UserSecrets.props": {},
          "buildTransitive/net6.0/Microsoft.Extensions.Configuration.UserSecrets.targets": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.5": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyModel/8.0.0": {
        "type": "package",
        "dependencies": {
          "System.Text.Encodings.Web": "8.0.0",
          "System.Text.Json": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Diagnostics/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Diagnostics.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Diagnostics.Abstractions/9.0.5": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.5",
          "Microsoft.Extensions.Options": "9.0.5",
          "System.Diagnostics.DiagnosticSource": "9.0.5"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.FileProviders.Abstractions/9.0.5": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.5"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.FileProviders.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.FileProviders.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.FileProviders.Physical/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileSystemGlobbing": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.FileProviders.Physical.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.FileProviders.Physical.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.FileSystemGlobbing/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.FileSystemGlobbing.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.FileSystemGlobbing.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Hosting/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.Binder": "8.0.0",
          "Microsoft.Extensions.Configuration.CommandLine": "8.0.0",
          "Microsoft.Extensions.Configuration.EnvironmentVariables": "8.0.0",
          "Microsoft.Extensions.Configuration.FileExtensions": "8.0.0",
          "Microsoft.Extensions.Configuration.Json": "8.0.0",
          "Microsoft.Extensions.Configuration.UserSecrets": "8.0.0",
          "Microsoft.Extensions.DependencyInjection": "8.0.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Diagnostics": "8.0.0",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Physical": "8.0.0",
          "Microsoft.Extensions.Hosting.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging.Configuration": "8.0.0",
          "Microsoft.Extensions.Logging.Console": "8.0.0",
          "Microsoft.Extensions.Logging.Debug": "8.0.0",
          "Microsoft.Extensions.Logging.EventLog": "8.0.0",
          "Microsoft.Extensions.Logging.EventSource": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Hosting.Abstractions/9.0.5": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.5",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.5",
          "Microsoft.Extensions.Diagnostics.Abstractions": "9.0.5",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.5",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.5"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Hosting.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Hosting.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Hosting.WindowsServices/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Hosting": "8.0.0",
          "Microsoft.Extensions.Logging.EventLog": "8.0.0",
          "System.ServiceProcess.ServiceController": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Hosting.WindowsServices.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Hosting.WindowsServices.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.5": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.5",
          "System.Diagnostics.DiagnosticSource": "9.0.5"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets": {}
        }
      },
      "Microsoft.Extensions.Logging.Configuration/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.Binder": "8.0.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Configuration.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Configuration.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Console/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging.Configuration": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0",
          "System.Text.Json": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Console.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Console.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Debug/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Debug.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Debug.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.EventLog/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0",
          "System.Diagnostics.EventLog": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventLog.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventLog.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.EventSource/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0",
          "System.Text.Json": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventSource.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventSource.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Options/9.0.5": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.5",
          "Microsoft.Extensions.Primitives": "9.0.5"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Options.targets": {}
        }
      },
      "Microsoft.Extensions.Options.ConfigurationExtensions/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.Binder": "8.0.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Primitives/9.0.5": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Win32.SystemEvents/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Win32.SystemEvents.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "runtimes/win/lib/net8.0/Microsoft.Win32.SystemEvents.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Serilog/4.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Serilog.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Serilog.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.AspNetCore/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "8.0.0",
          "Microsoft.Extensions.Logging": "8.0.0",
          "Serilog": "3.1.1",
          "Serilog.Extensions.Hosting": "8.0.0",
          "Serilog.Extensions.Logging": "8.0.0",
          "Serilog.Formatting.Compact": "2.0.0",
          "Serilog.Settings.Configuration": "8.0.0",
          "Serilog.Sinks.Console": "5.0.0",
          "Serilog.Sinks.Debug": "2.0.0",
          "Serilog.Sinks.File": "5.0.0"
        },
        "compile": {
          "lib/net8.0/Serilog.AspNetCore.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Serilog.AspNetCore.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "Serilog.Extensions.Hosting/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Hosting.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Serilog": "3.1.1",
          "Serilog.Extensions.Logging": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Serilog.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Serilog.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Extensions.Logging/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Logging": "8.0.0",
          "Serilog": "3.1.1"
        },
        "compile": {
          "lib/net8.0/Serilog.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Serilog.Extensions.Logging.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Formatting.Compact/2.0.0": {
        "type": "package",
        "dependencies": {
          "Serilog": "3.1.0"
        },
        "compile": {
          "lib/net7.0/Serilog.Formatting.Compact.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/Serilog.Formatting.Compact.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Settings.Configuration/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Binder": "8.0.0",
          "Microsoft.Extensions.DependencyModel": "8.0.0",
          "Serilog": "3.1.1"
        },
        "compile": {
          "lib/net8.0/Serilog.Settings.Configuration.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Serilog.Settings.Configuration.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Sinks.Console/5.0.1": {
        "type": "package",
        "dependencies": {
          "Serilog": "3.1.1"
        },
        "compile": {
          "lib/net7.0/Serilog.Sinks.Console.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/Serilog.Sinks.Console.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Sinks.Debug/2.0.0": {
        "type": "package",
        "dependencies": {
          "Serilog": "2.10.0"
        },
        "compile": {
          "lib/netstandard2.1/Serilog.Sinks.Debug.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.1/Serilog.Sinks.Debug.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Sinks.EventLog/4.0.0": {
        "type": "package",
        "dependencies": {
          "Serilog": "4.0.0",
          "System.Diagnostics.EventLog": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Serilog.Sinks.EventLog.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Serilog.Sinks.EventLog.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Sinks.File/5.0.0": {
        "type": "package",
        "dependencies": {
          "Serilog": "2.10.0"
        },
        "compile": {
          "lib/net5.0/Serilog.Sinks.File.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net5.0/Serilog.Sinks.File.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "System.Buffers/4.5.1": {
        "type": "package",
        "compile": {
          "ref/netcoreapp2.0/_._": {}
        },
        "runtime": {
          "lib/netcoreapp2.0/_._": {}
        }
      },
      "System.Diagnostics.DiagnosticSource/9.0.5": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "System.Diagnostics.EventLog/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Diagnostics.EventLog.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.Messages.dll": {},
          "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Drawing.Common/8.0.10": {
        "type": "package",
        "dependencies": {
          "Microsoft.Win32.SystemEvents": "8.0.0"
        },
        "compile": {
          "lib/net8.0/System.Drawing.Common.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Drawing.Common.dll": {
            "related": ".pdb;.xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.ServiceProcess.ServiceController/8.0.0": {
        "type": "package",
        "dependencies": {
          "System.Diagnostics.EventLog": "8.0.0"
        },
        "compile": {
          "lib/net8.0/System.ServiceProcess.ServiceController.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "runtimes/win/lib/net8.0/System.ServiceProcess.ServiceController.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Text.Encoding.CodePages/6.0.1": {
        "type": "package",
        "compile": {
          "lib/net6.0/System.Text.Encoding.CodePages.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "runtimes/win/lib/net6.0/System.Text.Encoding.CodePages.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "System.Text.Encodings.Web/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Text.Json/8.0.5": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Text.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Text.Json.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/System.Text.Json.targets": {}
        }
      },
      "System.Threading.Channels/6.0.0": {
        "type": "package",
        "compile": {
          "lib/net6.0/System.Threading.Channels.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Threading.Channels.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "XmpCore/6.1.10.1": {
        "type": "package",
        "compile": {
          "lib/netstandard2.0/XmpCore.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/XmpCore.dll": {
            "related": ".xml"
          }
        }
      },
      "CamBridge.Core/0.7.10": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v8.0",
        "dependencies": {
          "fo-dicom": "5.1.2"
        },
        "compile": {
          "bin/placeholder/CamBridge.Core.dll": {}
        },
        "runtime": {
          "bin/placeholder/CamBridge.Core.dll": {}
        }
      },
      "CamBridge.Infrastructure/0.7.10": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v8.0",
        "dependencies": {
          "CamBridge.Core": "0.7.10",
          "MetadataExtractor": "2.8.1",
          "Microsoft.Extensions.Configuration.Binder": "8.0.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.5",
          "Microsoft.Extensions.Hosting.Abstractions": "9.0.5",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.5",
          "Microsoft.Extensions.Logging.Configuration": "8.0.0",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "8.0.0",
          "System.Diagnostics.EventLog": "8.0.0",
          "System.Drawing.Common": "8.0.10",
          "fo-dicom": "5.2.2"
        },
        "compile": {
          "bin/placeholder/CamBridge.Infrastructure.dll": {}
        },
        "runtime": {
          "bin/placeholder/CamBridge.Infrastructure.dll": {}
        }
      }
    }
  },
  "libraries": {
    "CommunityToolkit.HighPerformance/8.3.2": {
      "sha512": "1Os81ua0FmIOtiSgOk5C1KBraQ3SDfxs/7BG4qDagm48nGplr//lAVqLH9I2TLDVqRFdhqTUaEITFA5Ho/Ovkw==",
      "type": "package",
      "path": "communitytoolkit.highperformance/8.3.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "License.md",
        "ThirdPartyNotices.txt",
        "communitytoolkit.highperformance.8.3.2.nupkg.sha512",
        "communitytoolkit.highperformance.nuspec",
        "lib/net6.0/CommunityToolkit.HighPerformance.dll",
        "lib/net6.0/CommunityToolkit.HighPerformance.pdb",
        "lib/net6.0/CommunityToolkit.HighPerformance.xml",
        "lib/net7.0/CommunityToolkit.HighPerformance.dll",
        "lib/net7.0/CommunityToolkit.HighPerformance.pdb",
        "lib/net7.0/CommunityToolkit.HighPerformance.xml",
        "lib/net8.0/CommunityToolkit.HighPerformance.dll",
        "lib/net8.0/CommunityToolkit.HighPerformance.pdb",
        "lib/net8.0/CommunityToolkit.HighPerformance.xml",
        "lib/netstandard2.0/CommunityToolkit.HighPerformance.dll",
        "lib/netstandard2.0/CommunityToolkit.HighPerformance.pdb",
        "lib/netstandard2.0/CommunityToolkit.HighPerformance.xml",
        "lib/netstandard2.1/CommunityToolkit.HighPerformance.dll",
        "lib/netstandard2.1/CommunityToolkit.HighPerformance.pdb",
        "lib/netstandard2.1/CommunityToolkit.HighPerformance.xml"
      ]
    },
    "fo-dicom/5.2.2": {
      "sha512": "vZR0j7Js8CjAm2GQWH4x+nb/eA9Rq1t8/Gsv6lfTFXfZ4ryJ5tFTyQbAp8EHJf1UZBQib8bsAUQRbBR346sHkw==",
      "type": "package",
      "path": "fo-dicom/5.2.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "FellowOakSquareTransp.png",
        "READMENuget.md",
        "fo-dicom.5.2.2.nupkg.sha512",
        "fo-dicom.nuspec",
        "lib/netstandard2.0/FO-DICOM.Core.xml",
        "lib/netstandard2.0/fo-dicom.core.dll"
      ]
    },
    "MetadataExtractor/2.8.1": {
      "sha512": "5VFc1urVZiIjB6zZ4nUkqDJntGPGPgPIrSqRtkAZ1AFDKHmxbRSHL3zZi9qMd8JYtOu/T8d5rZ7740jj/+dHOg==",
      "type": "package",
      "path": "metadataextractor/2.8.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net35/MetadataExtractor.dll",
        "lib/net35/MetadataExtractor.xml",
        "lib/net45/MetadataExtractor.dll",
        "lib/net45/MetadataExtractor.xml",
        "lib/netstandard1.3/MetadataExtractor.dll",
        "lib/netstandard1.3/MetadataExtractor.xml",
        "lib/netstandard2.0/MetadataExtractor.dll",
        "lib/netstandard2.0/MetadataExtractor.xml",
        "metadata-extractor-logo-128.png",
        "metadataextractor.2.8.1.nupkg.sha512",
        "metadataextractor.nuspec"
      ]
    },
    "Microsoft.Bcl.AsyncInterfaces/8.0.0": {
      "sha512": "3WA9q9yVqJp222P3x1wYIGDAkpjAku0TMUaaQV22g6L67AI0LdOIrVS7Ht2vJfLHGSPVuqN94vIr15qn+HEkHw==",
      "type": "package",
      "path": "microsoft.bcl.asyncinterfaces/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Bcl.AsyncInterfaces.targets",
        "buildTransitive/net462/_._",
        "lib/net462/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/net462/Microsoft.Bcl.AsyncInterfaces.xml",
        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.xml",
        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.xml",
        "microsoft.bcl.asyncinterfaces.8.0.0.nupkg.sha512",
        "microsoft.bcl.asyncinterfaces.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Bcl.HashCode/1.1.1": {
      "sha512": "MalY0Y/uM/LjXtHfX/26l2VtN4LDNZ2OE3aumNOHDLsT4fNYy2hiHXI4CXCqKpNUNm7iJ2brrc4J89UdaL56FA==",
      "type": "package",
      "path": "microsoft.bcl.hashcode/1.1.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net461/Microsoft.Bcl.HashCode.dll",
        "lib/net461/Microsoft.Bcl.HashCode.xml",
        "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.dll",
        "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.xml",
        "lib/netstandard2.0/Microsoft.Bcl.HashCode.dll",
        "lib/netstandard2.0/Microsoft.Bcl.HashCode.xml",
        "lib/netstandard2.1/Microsoft.Bcl.HashCode.dll",
        "lib/netstandard2.1/Microsoft.Bcl.HashCode.xml",
        "microsoft.bcl.hashcode.1.1.1.nupkg.sha512",
        "microsoft.bcl.hashcode.nuspec",
        "ref/net461/Microsoft.Bcl.HashCode.dll",
        "ref/netcoreapp2.1/Microsoft.Bcl.HashCode.dll",
        "ref/netstandard2.0/Microsoft.Bcl.HashCode.dll",
        "ref/netstandard2.1/Microsoft.Bcl.HashCode.dll",
        "useSharedDesignerContext.txt",
        "version.txt"
      ]
    },
    "Microsoft.Extensions.Configuration/8.0.0": {
      "sha512": "0J/9YNXTMWSZP2p2+nvl8p71zpSwokZXZuJW+VjdErkegAnFdO1XlqtA62SJtgVYHdKu3uPxJHcMR/r35HwFBA==",
      "type": "package",
      "path": "microsoft.extensions.configuration/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.targets",
        "lib/net462/Microsoft.Extensions.Configuration.dll",
        "lib/net462/Microsoft.Extensions.Configuration.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.xml",
        "microsoft.extensions.configuration.8.0.0.nupkg.sha512",
        "microsoft.extensions.configuration.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.5": {
      "sha512": "ew0G6gIznnyAkbIa67wXspkDFcVektjN3xaDAfBDIPbWph+rbuGaaohFxUSGw28ht7wdcWtTtElKnzfkcDDbOQ==",
      "type": "package",
      "path": "microsoft.extensions.configuration.abstractions/9.0.5",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "microsoft.extensions.configuration.abstractions.9.0.5.nupkg.sha512",
        "microsoft.extensions.configuration.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.Binder/8.0.0": {
      "sha512": "mBMoXLsr5s1y2zOHWmKsE9veDcx8h1x/c3rz4baEdQKTeDcmQAPNbB54Pi/lhFO3K431eEq6PFbMgLaa6PHFfA==",
      "type": "package",
      "path": "microsoft.extensions.configuration.binder/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/cs/Microsoft.Extensions.Configuration.Binder.SourceGeneration.dll",
        "analyzers/dotnet/cs/cs/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/de/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/es/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/fr/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/it/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/ja/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/ko/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/pl/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/pt-BR/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/ru/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/tr/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/zh-Hans/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/zh-Hant/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.Binder.targets",
        "lib/net462/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/net462/Microsoft.Extensions.Configuration.Binder.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.Binder.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.Binder.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.Binder.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Binder.xml",
        "microsoft.extensions.configuration.binder.8.0.0.nupkg.sha512",
        "microsoft.extensions.configuration.binder.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.CommandLine/8.0.0": {
      "sha512": "NZuZMz3Q8Z780nKX3ifV1fE7lS+6pynDHK71OfU4OZ1ItgvDOhyOC7E6z+JMZrAj63zRpwbdldYFk499t3+1dQ==",
      "type": "package",
      "path": "microsoft.extensions.configuration.commandline/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.CommandLine.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.CommandLine.targets",
        "lib/net462/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/net462/Microsoft.Extensions.Configuration.CommandLine.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.CommandLine.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.CommandLine.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.CommandLine.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.CommandLine.xml",
        "microsoft.extensions.configuration.commandline.8.0.0.nupkg.sha512",
        "microsoft.extensions.configuration.commandline.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.EnvironmentVariables/8.0.0": {
      "sha512": "plvZ0ZIpq+97gdPNNvhwvrEZ92kNml9hd1pe3idMA7svR0PztdzVLkoWLcRFgySYXUJc3kSM3Xw3mNFMo/bxRA==",
      "type": "package",
      "path": "microsoft.extensions.configuration.environmentvariables/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.EnvironmentVariables.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.EnvironmentVariables.targets",
        "lib/net462/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/net462/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "microsoft.extensions.configuration.environmentvariables.8.0.0.nupkg.sha512",
        "microsoft.extensions.configuration.environmentvariables.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.FileExtensions/8.0.0": {
      "sha512": "McP+Lz/EKwvtCv48z0YImw+L1gi1gy5rHhNaNIY2CrjloV+XY8gydT8DjMR6zWeL13AFK+DioVpppwAuO1Gi1w==",
      "type": "package",
      "path": "microsoft.extensions.configuration.fileextensions/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.FileExtensions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.FileExtensions.targets",
        "lib/net462/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/net462/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "microsoft.extensions.configuration.fileextensions.8.0.0.nupkg.sha512",
        "microsoft.extensions.configuration.fileextensions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.Json/8.0.0": {
      "sha512": "C2wqUoh9OmRL1akaCcKSTmRU8z0kckfImG7zLNI8uyi47Lp+zd5LWAD17waPQEqCz3ioWOCrFUo+JJuoeZLOBw==",
      "type": "package",
      "path": "microsoft.extensions.configuration.json/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.Json.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.Json.targets",
        "lib/net462/Microsoft.Extensions.Configuration.Json.dll",
        "lib/net462/Microsoft.Extensions.Configuration.Json.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.Json.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.Json.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.Json.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.Json.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.Json.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.Json.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Json.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Json.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Configuration.Json.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Configuration.Json.xml",
        "microsoft.extensions.configuration.json.8.0.0.nupkg.sha512",
        "microsoft.extensions.configuration.json.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.UserSecrets/8.0.0": {
      "sha512": "ihDHu2dJYQird9pl2CbdwuNDfvCZdOS0S7SPlNfhPt0B81UTT+yyZKz2pimFZGUp3AfuBRnqUCxB2SjsZKHVUw==",
      "type": "package",
      "path": "microsoft.extensions.configuration.usersecrets/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "buildTransitive/net462/Microsoft.Extensions.Configuration.UserSecrets.props",
        "buildTransitive/net462/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "buildTransitive/net6.0/Microsoft.Extensions.Configuration.UserSecrets.props",
        "buildTransitive/net6.0/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.props",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "lib/net462/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/net462/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "microsoft.extensions.configuration.usersecrets.8.0.0.nupkg.sha512",
        "microsoft.extensions.configuration.usersecrets.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyInjection/8.0.0": {
      "sha512": "V8S3bsm50ig6JSyrbcJJ8bW2b9QLGouz+G1miK3UTaOWmMtFwNNNzUf4AleyDWUmTrWMLNnFSLEQtxmxgNQnNQ==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.xml",
        "lib/net6.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net6.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/net7.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net7.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.xml",
        "microsoft.extensions.dependencyinjection.8.0.0.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.5": {
      "sha512": "cjnRtsEAzU73aN6W7vkWy8Phj5t3Xm78HSqgrbh/O4Q9SK/yN73wZVa21QQY6amSLQRQ/M8N+koGnY6PuvKQsw==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.5",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "microsoft.extensions.dependencyinjection.abstractions.9.0.5.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyModel/8.0.0": {
      "sha512": "NSmDw3K0ozNDgShSIpsZcbFIzBX4w28nDag+TfaQujkXGazBm+lid5onlWoCBy4VsLxqnnKjEBbGSJVWJMf43g==",
      "type": "package",
      "path": "microsoft.extensions.dependencymodel/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyModel.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyModel.targets",
        "lib/net462/Microsoft.Extensions.DependencyModel.dll",
        "lib/net462/Microsoft.Extensions.DependencyModel.xml",
        "lib/net6.0/Microsoft.Extensions.DependencyModel.dll",
        "lib/net6.0/Microsoft.Extensions.DependencyModel.xml",
        "lib/net7.0/Microsoft.Extensions.DependencyModel.dll",
        "lib/net7.0/Microsoft.Extensions.DependencyModel.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyModel.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyModel.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyModel.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyModel.xml",
        "microsoft.extensions.dependencymodel.8.0.0.nupkg.sha512",
        "microsoft.extensions.dependencymodel.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Diagnostics/8.0.0": {
      "sha512": "3PZp/YSkIXrF7QK7PfC1bkyRYwqOHpWFad8Qx+4wkuumAeXo1NHaxpS9LboNA9OvNSAu+QOVlXbMyoY+pHSqcw==",
      "type": "package",
      "path": "microsoft.extensions.diagnostics/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Diagnostics.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Diagnostics.targets",
        "lib/net462/Microsoft.Extensions.Diagnostics.dll",
        "lib/net462/Microsoft.Extensions.Diagnostics.xml",
        "lib/net6.0/Microsoft.Extensions.Diagnostics.dll",
        "lib/net6.0/Microsoft.Extensions.Diagnostics.xml",
        "lib/net7.0/Microsoft.Extensions.Diagnostics.dll",
        "lib/net7.0/Microsoft.Extensions.Diagnostics.xml",
        "lib/net8.0/Microsoft.Extensions.Diagnostics.dll",
        "lib/net8.0/Microsoft.Extensions.Diagnostics.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Diagnostics.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Diagnostics.xml",
        "microsoft.extensions.diagnostics.8.0.0.nupkg.sha512",
        "microsoft.extensions.diagnostics.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Diagnostics.Abstractions/9.0.5": {
      "sha512": "6YfTcULCYREMTqtk+s3UiszsFV2xN2FXtxdQpurmQJY9Cp/QGiM4MTKfJKUo7AzdLuzjOKKMWjQITmvtK7AsUg==",
      "type": "package",
      "path": "microsoft.extensions.diagnostics.abstractions/9.0.5",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Diagnostics.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Diagnostics.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Diagnostics.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Diagnostics.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Diagnostics.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Diagnostics.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Diagnostics.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Diagnostics.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Diagnostics.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Diagnostics.Abstractions.xml",
        "microsoft.extensions.diagnostics.abstractions.9.0.5.nupkg.sha512",
        "microsoft.extensions.diagnostics.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.FileProviders.Abstractions/9.0.5": {
      "sha512": "LLm+e8lvD+jOI+blHRSxPqywPaohOTNcVzQv548R1UpkEiNB2D+zf3RrqxBdB1LDPicRMTnfiaKJovxF8oX1bQ==",
      "type": "package",
      "path": "microsoft.extensions.fileproviders.abstractions/9.0.5",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.FileProviders.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.FileProviders.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.FileProviders.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.FileProviders.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.FileProviders.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.FileProviders.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.FileProviders.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.FileProviders.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Abstractions.xml",
        "microsoft.extensions.fileproviders.abstractions.9.0.5.nupkg.sha512",
        "microsoft.extensions.fileproviders.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.FileProviders.Physical/8.0.0": {
      "sha512": "UboiXxpPUpwulHvIAVE36Knq0VSHaAmfrFkegLyBZeaADuKezJ/AIXYAW8F5GBlGk/VaibN2k/Zn1ca8YAfVdA==",
      "type": "package",
      "path": "microsoft.extensions.fileproviders.physical/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.FileProviders.Physical.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.FileProviders.Physical.targets",
        "lib/net462/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/net462/Microsoft.Extensions.FileProviders.Physical.xml",
        "lib/net6.0/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/net6.0/Microsoft.Extensions.FileProviders.Physical.xml",
        "lib/net7.0/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/net7.0/Microsoft.Extensions.FileProviders.Physical.xml",
        "lib/net8.0/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/net8.0/Microsoft.Extensions.FileProviders.Physical.xml",
        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Physical.xml",
        "microsoft.extensions.fileproviders.physical.8.0.0.nupkg.sha512",
        "microsoft.extensions.fileproviders.physical.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.FileSystemGlobbing/8.0.0": {
      "sha512": "OK+670i7esqlQrPjdIKRbsyMCe9g5kSLpRRQGSr4Q58AOYEe/hCnfLZprh7viNisSUUQZmMrbbuDaIrP+V1ebQ==",
      "type": "package",
      "path": "microsoft.extensions.filesystemglobbing/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.FileSystemGlobbing.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.FileSystemGlobbing.targets",
        "lib/net462/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/net462/Microsoft.Extensions.FileSystemGlobbing.xml",
        "lib/net6.0/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/net6.0/Microsoft.Extensions.FileSystemGlobbing.xml",
        "lib/net7.0/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/net7.0/Microsoft.Extensions.FileSystemGlobbing.xml",
        "lib/net8.0/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/net8.0/Microsoft.Extensions.FileSystemGlobbing.xml",
        "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.xml",
        "microsoft.extensions.filesystemglobbing.8.0.0.nupkg.sha512",
        "microsoft.extensions.filesystemglobbing.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Hosting/8.0.0": {
      "sha512": "ItYHpdqVp5/oFLT5QqbopnkKlyFG9EW/9nhM6/yfObeKt6Su0wkBio6AizgRHGNwhJuAtlE5VIjow5JOTrip6w==",
      "type": "package",
      "path": "microsoft.extensions.hosting/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Hosting.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Hosting.targets",
        "lib/net462/Microsoft.Extensions.Hosting.dll",
        "lib/net462/Microsoft.Extensions.Hosting.xml",
        "lib/net6.0/Microsoft.Extensions.Hosting.dll",
        "lib/net6.0/Microsoft.Extensions.Hosting.xml",
        "lib/net7.0/Microsoft.Extensions.Hosting.dll",
        "lib/net7.0/Microsoft.Extensions.Hosting.xml",
        "lib/net8.0/Microsoft.Extensions.Hosting.dll",
        "lib/net8.0/Microsoft.Extensions.Hosting.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.xml",
        "microsoft.extensions.hosting.8.0.0.nupkg.sha512",
        "microsoft.extensions.hosting.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Hosting.Abstractions/9.0.5": {
      "sha512": "3GA/dxqkP6yFe18qYRgtKYuN2onC8NfhlpNN21jptkVKk7olqBTkdT49oL0pSEz2SptRsux7LocCU7+alGnEag==",
      "type": "package",
      "path": "microsoft.extensions.hosting.abstractions/9.0.5",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Hosting.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Hosting.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Hosting.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Hosting.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Hosting.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.Abstractions.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.Abstractions.xml",
        "microsoft.extensions.hosting.abstractions.9.0.5.nupkg.sha512",
        "microsoft.extensions.hosting.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Hosting.WindowsServices/8.0.0": {
      "sha512": "8JIvU6R9fejZj/p6QATeDaNEPtIvLuwE5Uh7qyPx7tp+Fc9FqYaAe6ylU2dM839IUpmsU4ZVev956slZyrYEhQ==",
      "type": "package",
      "path": "microsoft.extensions.hosting.windowsservices/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Hosting.WindowsServices.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Hosting.WindowsServices.targets",
        "lib/net462/Microsoft.Extensions.Hosting.WindowsServices.dll",
        "lib/net462/Microsoft.Extensions.Hosting.WindowsServices.xml",
        "lib/net6.0/Microsoft.Extensions.Hosting.WindowsServices.dll",
        "lib/net6.0/Microsoft.Extensions.Hosting.WindowsServices.xml",
        "lib/net7.0/Microsoft.Extensions.Hosting.WindowsServices.dll",
        "lib/net7.0/Microsoft.Extensions.Hosting.WindowsServices.xml",
        "lib/net8.0/Microsoft.Extensions.Hosting.WindowsServices.dll",
        "lib/net8.0/Microsoft.Extensions.Hosting.WindowsServices.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.WindowsServices.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.WindowsServices.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.WindowsServices.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.WindowsServices.xml",
        "microsoft.extensions.hosting.windowsservices.8.0.0.nupkg.sha512",
        "microsoft.extensions.hosting.windowsservices.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging/8.0.0": {
      "sha512": "tvRkov9tAJ3xP51LCv3FJ2zINmv1P8Hi8lhhtcKGqM+ImiTCC84uOPEI4z8Cdq2C3o9e+Aa0Gw0rmrsJD77W+w==",
      "type": "package",
      "path": "microsoft.extensions.logging/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.targets",
        "lib/net462/Microsoft.Extensions.Logging.dll",
        "lib/net462/Microsoft.Extensions.Logging.xml",
        "lib/net6.0/Microsoft.Extensions.Logging.dll",
        "lib/net6.0/Microsoft.Extensions.Logging.xml",
        "lib/net7.0/Microsoft.Extensions.Logging.dll",
        "lib/net7.0/Microsoft.Extensions.Logging.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Logging.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Logging.xml",
        "microsoft.extensions.logging.8.0.0.nupkg.sha512",
        "microsoft.extensions.logging.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.5": {
      "sha512": "pP1PADCrIxMYJXxFmTVbAgEU7GVpjK5i0/tyfU9DiE0oXQy3JWQaOVgCkrCiePLgS8b5sghM3Fau3EeHiVWbCg==",
      "type": "package",
      "path": "microsoft.extensions.logging.abstractions/9.0.5",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net462/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "microsoft.extensions.logging.abstractions.9.0.5.nupkg.sha512",
        "microsoft.extensions.logging.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Configuration/8.0.0": {
      "sha512": "ixXXV0G/12g6MXK65TLngYN9V5hQQRuV+fZi882WIoVJT7h5JvoYoxTEwCgdqwLjSneqh1O+66gM8sMr9z/rsQ==",
      "type": "package",
      "path": "microsoft.extensions.logging.configuration/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Configuration.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Configuration.targets",
        "lib/net462/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/net462/Microsoft.Extensions.Logging.Configuration.xml",
        "lib/net6.0/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/net6.0/Microsoft.Extensions.Logging.Configuration.xml",
        "lib/net7.0/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/net7.0/Microsoft.Extensions.Logging.Configuration.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Configuration.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Configuration.xml",
        "microsoft.extensions.logging.configuration.8.0.0.nupkg.sha512",
        "microsoft.extensions.logging.configuration.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Console/8.0.0": {
      "sha512": "e+48o7DztoYog+PY430lPxrM4mm3PbA6qucvQtUDDwVo4MO+ejMw7YGc/o2rnxbxj4isPxdfKFzTxvXMwAz83A==",
      "type": "package",
      "path": "microsoft.extensions.logging.console/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Console.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Console.targets",
        "lib/net462/Microsoft.Extensions.Logging.Console.dll",
        "lib/net462/Microsoft.Extensions.Logging.Console.xml",
        "lib/net6.0/Microsoft.Extensions.Logging.Console.dll",
        "lib/net6.0/Microsoft.Extensions.Logging.Console.xml",
        "lib/net7.0/Microsoft.Extensions.Logging.Console.dll",
        "lib/net7.0/Microsoft.Extensions.Logging.Console.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Console.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Console.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Console.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Console.xml",
        "microsoft.extensions.logging.console.8.0.0.nupkg.sha512",
        "microsoft.extensions.logging.console.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Debug/8.0.0": {
      "sha512": "dt0x21qBdudHLW/bjMJpkixv858RRr8eSomgVbU8qljOyfrfDGi1JQvpF9w8S7ziRPtRKisuWaOwFxJM82GxeA==",
      "type": "package",
      "path": "microsoft.extensions.logging.debug/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Debug.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Debug.targets",
        "lib/net462/Microsoft.Extensions.Logging.Debug.dll",
        "lib/net462/Microsoft.Extensions.Logging.Debug.xml",
        "lib/net6.0/Microsoft.Extensions.Logging.Debug.dll",
        "lib/net6.0/Microsoft.Extensions.Logging.Debug.xml",
        "lib/net7.0/Microsoft.Extensions.Logging.Debug.dll",
        "lib/net7.0/Microsoft.Extensions.Logging.Debug.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Debug.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Debug.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Debug.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Debug.xml",
        "microsoft.extensions.logging.debug.8.0.0.nupkg.sha512",
        "microsoft.extensions.logging.debug.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.EventLog/8.0.0": {
      "sha512": "3X9D3sl7EmOu7vQp5MJrmIJBl5XSdOhZPYXUeFfYa6Nnm9+tok8x3t3IVPLhm7UJtPOU61ohFchw8rNm9tIYOQ==",
      "type": "package",
      "path": "microsoft.extensions.logging.eventlog/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.EventLog.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.EventLog.targets",
        "lib/net462/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/net462/Microsoft.Extensions.Logging.EventLog.xml",
        "lib/net6.0/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/net6.0/Microsoft.Extensions.Logging.EventLog.xml",
        "lib/net7.0/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/net7.0/Microsoft.Extensions.Logging.EventLog.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.EventLog.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.EventLog.xml",
        "microsoft.extensions.logging.eventlog.8.0.0.nupkg.sha512",
        "microsoft.extensions.logging.eventlog.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.EventSource/8.0.0": {
      "sha512": "oKcPMrw+luz2DUAKhwFXrmFikZWnyc8l2RKoQwqU3KIZZjcfoJE0zRHAnqATfhRZhtcbjl/QkiY2Xjxp0xu+6w==",
      "type": "package",
      "path": "microsoft.extensions.logging.eventsource/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.EventSource.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.EventSource.targets",
        "lib/net462/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/net462/Microsoft.Extensions.Logging.EventSource.xml",
        "lib/net6.0/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/net6.0/Microsoft.Extensions.Logging.EventSource.xml",
        "lib/net7.0/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/net7.0/Microsoft.Extensions.Logging.EventSource.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.EventSource.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.EventSource.xml",
        "microsoft.extensions.logging.eventsource.8.0.0.nupkg.sha512",
        "microsoft.extensions.logging.eventsource.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Options/9.0.5": {
      "sha512": "vPdJQU8YLOUSSK8NL0RmwcXJr2E0w8xH559PGQl4JYsglgilZr9LZnqV2zdgk+XR05+kuvhBEZKoDVd46o7NqA==",
      "type": "package",
      "path": "microsoft.extensions.options/9.0.5",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Options.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Options.targets",
        "buildTransitive/net462/Microsoft.Extensions.Options.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Options.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Options.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Options.targets",
        "lib/net462/Microsoft.Extensions.Options.dll",
        "lib/net462/Microsoft.Extensions.Options.xml",
        "lib/net8.0/Microsoft.Extensions.Options.dll",
        "lib/net8.0/Microsoft.Extensions.Options.xml",
        "lib/net9.0/Microsoft.Extensions.Options.dll",
        "lib/net9.0/Microsoft.Extensions.Options.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Options.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Options.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Options.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Options.xml",
        "microsoft.extensions.options.9.0.5.nupkg.sha512",
        "microsoft.extensions.options.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Options.ConfigurationExtensions/8.0.0": {
      "sha512": "0f4DMRqEd50zQh+UyJc+/HiBsZ3vhAQALgdkcQEalSH1L2isdC7Yj54M3cyo5e+BeO5fcBQ7Dxly8XiBBcvRgw==",
      "type": "package",
      "path": "microsoft.extensions.options.configurationextensions/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Options.ConfigurationExtensions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Options.ConfigurationExtensions.targets",
        "lib/net462/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/net462/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "lib/net6.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/net6.0/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "lib/net7.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/net7.0/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "lib/net8.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/net8.0/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "microsoft.extensions.options.configurationextensions.8.0.0.nupkg.sha512",
        "microsoft.extensions.options.configurationextensions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Primitives/9.0.5": {
      "sha512": "b4OAv1qE1C9aM+ShWJu3rlo/WjDwa/I30aIPXqDWSKXTtKl1Wwh6BZn+glH5HndGVVn3C6ZAPQj5nv7/7HJNBQ==",
      "type": "package",
      "path": "microsoft.extensions.primitives/9.0.5",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Primitives.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Primitives.targets",
        "lib/net462/Microsoft.Extensions.Primitives.dll",
        "lib/net462/Microsoft.Extensions.Primitives.xml",
        "lib/net8.0/Microsoft.Extensions.Primitives.dll",
        "lib/net8.0/Microsoft.Extensions.Primitives.xml",
        "lib/net9.0/Microsoft.Extensions.Primitives.dll",
        "lib/net9.0/Microsoft.Extensions.Primitives.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Primitives.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Primitives.xml",
        "microsoft.extensions.primitives.9.0.5.nupkg.sha512",
        "microsoft.extensions.primitives.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Win32.SystemEvents/8.0.0": {
      "sha512": "9opKRyOKMCi2xJ7Bj7kxtZ1r9vbzosMvRrdEhVhDz8j8MoBGgB+WmC94yH839NPH+BclAjtQ/pyagvi/8gDLkw==",
      "type": "package",
      "path": "microsoft.win32.systemevents/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Win32.SystemEvents.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Win32.SystemEvents.targets",
        "lib/net462/Microsoft.Win32.SystemEvents.dll",
        "lib/net462/Microsoft.Win32.SystemEvents.xml",
        "lib/net6.0/Microsoft.Win32.SystemEvents.dll",
        "lib/net6.0/Microsoft.Win32.SystemEvents.xml",
        "lib/net7.0/Microsoft.Win32.SystemEvents.dll",
        "lib/net7.0/Microsoft.Win32.SystemEvents.xml",
        "lib/net8.0/Microsoft.Win32.SystemEvents.dll",
        "lib/net8.0/Microsoft.Win32.SystemEvents.xml",
        "lib/netstandard2.0/Microsoft.Win32.SystemEvents.dll",
        "lib/netstandard2.0/Microsoft.Win32.SystemEvents.xml",
        "microsoft.win32.systemevents.8.0.0.nupkg.sha512",
        "microsoft.win32.systemevents.nuspec",
        "runtimes/win/lib/net6.0/Microsoft.Win32.SystemEvents.dll",
        "runtimes/win/lib/net6.0/Microsoft.Win32.SystemEvents.xml",
        "runtimes/win/lib/net7.0/Microsoft.Win32.SystemEvents.dll",
        "runtimes/win/lib/net7.0/Microsoft.Win32.SystemEvents.xml",
        "runtimes/win/lib/net8.0/Microsoft.Win32.SystemEvents.dll",
        "runtimes/win/lib/net8.0/Microsoft.Win32.SystemEvents.xml",
        "useSharedDesignerContext.txt"
      ]
    },
    "Serilog/4.0.0": {
      "sha512": "2jDkUrSh5EofOp7Lx5Zgy0EB+7hXjjxE2ktTb1WVQmU00lDACR2TdROGKU0K1pDTBSJBN1PqgYpgOZF8mL7NJw==",
      "type": "package",
      "path": "serilog/4.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "icon.png",
        "lib/net462/Serilog.dll",
        "lib/net462/Serilog.xml",
        "lib/net471/Serilog.dll",
        "lib/net471/Serilog.xml",
        "lib/net6.0/Serilog.dll",
        "lib/net6.0/Serilog.xml",
        "lib/net8.0/Serilog.dll",
        "lib/net8.0/Serilog.xml",
        "lib/netstandard2.0/Serilog.dll",
        "lib/netstandard2.0/Serilog.xml",
        "serilog.4.0.0.nupkg.sha512",
        "serilog.nuspec"
      ]
    },
    "Serilog.AspNetCore/8.0.1": {
      "sha512": "B/X+wAfS7yWLVOTD83B+Ip9yl4MkhioaXj90JSoWi1Ayi8XHepEnsBdrkojg08eodCnmOKmShFUN2GgEc6c0CQ==",
      "type": "package",
      "path": "serilog.aspnetcore/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "icon.png",
        "lib/net462/Serilog.AspNetCore.dll",
        "lib/net462/Serilog.AspNetCore.xml",
        "lib/net6.0/Serilog.AspNetCore.dll",
        "lib/net6.0/Serilog.AspNetCore.xml",
        "lib/net7.0/Serilog.AspNetCore.dll",
        "lib/net7.0/Serilog.AspNetCore.xml",
        "lib/net8.0/Serilog.AspNetCore.dll",
        "lib/net8.0/Serilog.AspNetCore.xml",
        "lib/netstandard2.0/Serilog.AspNetCore.dll",
        "lib/netstandard2.0/Serilog.AspNetCore.xml",
        "serilog.aspnetcore.8.0.1.nupkg.sha512",
        "serilog.aspnetcore.nuspec"
      ]
    },
    "Serilog.Extensions.Hosting/8.0.0": {
      "sha512": "db0OcbWeSCvYQkHWu6n0v40N4kKaTAXNjlM3BKvcbwvNzYphQFcBR+36eQ/7hMMwOkJvAyLC2a9/jNdUL5NjtQ==",
      "type": "package",
      "path": "serilog.extensions.hosting/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "icon.png",
        "lib/net462/Serilog.Extensions.Hosting.dll",
        "lib/net462/Serilog.Extensions.Hosting.xml",
        "lib/net6.0/Serilog.Extensions.Hosting.dll",
        "lib/net6.0/Serilog.Extensions.Hosting.xml",
        "lib/net7.0/Serilog.Extensions.Hosting.dll",
        "lib/net7.0/Serilog.Extensions.Hosting.xml",
        "lib/net8.0/Serilog.Extensions.Hosting.dll",
        "lib/net8.0/Serilog.Extensions.Hosting.xml",
        "lib/netstandard2.0/Serilog.Extensions.Hosting.dll",
        "lib/netstandard2.0/Serilog.Extensions.Hosting.xml",
        "serilog.extensions.hosting.8.0.0.nupkg.sha512",
        "serilog.extensions.hosting.nuspec"
      ]
    },
    "Serilog.Extensions.Logging/8.0.0": {
      "sha512": "YEAMWu1UnWgf1c1KP85l1SgXGfiVo0Rz6x08pCiPOIBt2Qe18tcZLvdBUuV5o1QHvrs8FAry9wTIhgBRtjIlEg==",
      "type": "package",
      "path": "serilog.extensions.logging/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Serilog.Extensions.Logging.dll",
        "lib/net462/Serilog.Extensions.Logging.xml",
        "lib/net6.0/Serilog.Extensions.Logging.dll",
        "lib/net6.0/Serilog.Extensions.Logging.xml",
        "lib/net7.0/Serilog.Extensions.Logging.dll",
        "lib/net7.0/Serilog.Extensions.Logging.xml",
        "lib/net8.0/Serilog.Extensions.Logging.dll",
        "lib/net8.0/Serilog.Extensions.Logging.xml",
        "lib/netstandard2.0/Serilog.Extensions.Logging.dll",
        "lib/netstandard2.0/Serilog.Extensions.Logging.xml",
        "lib/netstandard2.1/Serilog.Extensions.Logging.dll",
        "lib/netstandard2.1/Serilog.Extensions.Logging.xml",
        "serilog-extension-nuget.png",
        "serilog.extensions.logging.8.0.0.nupkg.sha512",
        "serilog.extensions.logging.nuspec"
      ]
    },
    "Serilog.Formatting.Compact/2.0.0": {
      "sha512": "ob6z3ikzFM3D1xalhFuBIK1IOWf+XrQq+H4KeH4VqBcPpNcmUgZlRQ2h3Q7wvthpdZBBoY86qZOI2LCXNaLlNA==",
      "type": "package",
      "path": "serilog.formatting.compact/2.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Serilog.Formatting.Compact.dll",
        "lib/net462/Serilog.Formatting.Compact.xml",
        "lib/net471/Serilog.Formatting.Compact.dll",
        "lib/net471/Serilog.Formatting.Compact.xml",
        "lib/net6.0/Serilog.Formatting.Compact.dll",
        "lib/net6.0/Serilog.Formatting.Compact.xml",
        "lib/net7.0/Serilog.Formatting.Compact.dll",
        "lib/net7.0/Serilog.Formatting.Compact.xml",
        "lib/netstandard2.0/Serilog.Formatting.Compact.dll",
        "lib/netstandard2.0/Serilog.Formatting.Compact.xml",
        "lib/netstandard2.1/Serilog.Formatting.Compact.dll",
        "lib/netstandard2.1/Serilog.Formatting.Compact.xml",
        "serilog-extension-nuget.png",
        "serilog.formatting.compact.2.0.0.nupkg.sha512",
        "serilog.formatting.compact.nuspec"
      ]
    },
    "Serilog.Settings.Configuration/8.0.0": {
      "sha512": "nR0iL5HwKj5v6ULo3/zpP8NMcq9E2pxYA6XKTSWCbugVs4YqPyvaqaKOY+OMpPivKp7zMEpax2UKHnDodbRB0Q==",
      "type": "package",
      "path": "serilog.settings.configuration/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "icon.png",
        "lib/net462/Serilog.Settings.Configuration.dll",
        "lib/net462/Serilog.Settings.Configuration.xml",
        "lib/net6.0/Serilog.Settings.Configuration.dll",
        "lib/net6.0/Serilog.Settings.Configuration.xml",
        "lib/net7.0/Serilog.Settings.Configuration.dll",
        "lib/net7.0/Serilog.Settings.Configuration.xml",
        "lib/net8.0/Serilog.Settings.Configuration.dll",
        "lib/net8.0/Serilog.Settings.Configuration.xml",
        "lib/netstandard2.0/Serilog.Settings.Configuration.dll",
        "lib/netstandard2.0/Serilog.Settings.Configuration.xml",
        "serilog.settings.configuration.8.0.0.nupkg.sha512",
        "serilog.settings.configuration.nuspec"
      ]
    },
    "Serilog.Sinks.Console/5.0.1": {
      "sha512": "6Jt8jl9y2ey8VV7nVEUAyjjyxjAQuvd5+qj4XYAT9CwcsvR70HHULGBeD+K2WCALFXf7CFsNQT4lON6qXcu2AA==",
      "type": "package",
      "path": "serilog.sinks.console/5.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "icon.png",
        "lib/net462/Serilog.Sinks.Console.dll",
        "lib/net462/Serilog.Sinks.Console.xml",
        "lib/net471/Serilog.Sinks.Console.dll",
        "lib/net471/Serilog.Sinks.Console.xml",
        "lib/net5.0/Serilog.Sinks.Console.dll",
        "lib/net5.0/Serilog.Sinks.Console.xml",
        "lib/net6.0/Serilog.Sinks.Console.dll",
        "lib/net6.0/Serilog.Sinks.Console.xml",
        "lib/net7.0/Serilog.Sinks.Console.dll",
        "lib/net7.0/Serilog.Sinks.Console.xml",
        "lib/netstandard2.0/Serilog.Sinks.Console.dll",
        "lib/netstandard2.0/Serilog.Sinks.Console.xml",
        "lib/netstandard2.1/Serilog.Sinks.Console.dll",
        "lib/netstandard2.1/Serilog.Sinks.Console.xml",
        "serilog.sinks.console.5.0.1.nupkg.sha512",
        "serilog.sinks.console.nuspec"
      ]
    },
    "Serilog.Sinks.Debug/2.0.0": {
      "sha512": "Y6g3OBJ4JzTyyw16fDqtFcQ41qQAydnEvEqmXjhwhgjsnG/FaJ8GUqF5ldsC/bVkK8KYmqrPhDO+tm4dF6xx4A==",
      "type": "package",
      "path": "serilog.sinks.debug/2.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "icon.png",
        "lib/net45/Serilog.Sinks.Debug.dll",
        "lib/net45/Serilog.Sinks.Debug.xml",
        "lib/net46/Serilog.Sinks.Debug.dll",
        "lib/net46/Serilog.Sinks.Debug.xml",
        "lib/netstandard1.0/Serilog.Sinks.Debug.dll",
        "lib/netstandard1.0/Serilog.Sinks.Debug.xml",
        "lib/netstandard2.0/Serilog.Sinks.Debug.dll",
        "lib/netstandard2.0/Serilog.Sinks.Debug.xml",
        "lib/netstandard2.1/Serilog.Sinks.Debug.dll",
        "lib/netstandard2.1/Serilog.Sinks.Debug.xml",
        "serilog.sinks.debug.2.0.0.nupkg.sha512",
        "serilog.sinks.debug.nuspec"
      ]
    },
    "Serilog.Sinks.EventLog/4.0.0": {
      "sha512": "Cmfr5v407xVc0GA0Sk+RQCCBNvxvwY1lV5/k2bqLi3ksTvLx/KbGTVM2rA5Z/e2ZEZ12HOCvBviQ9Er9GsMjXQ==",
      "type": "package",
      "path": "serilog.sinks.eventlog/4.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Serilog.Sinks.EventLog.dll",
        "lib/net462/Serilog.Sinks.EventLog.xml",
        "lib/net471/Serilog.Sinks.EventLog.dll",
        "lib/net471/Serilog.Sinks.EventLog.xml",
        "lib/net6.0/Serilog.Sinks.EventLog.dll",
        "lib/net6.0/Serilog.Sinks.EventLog.xml",
        "lib/net8.0/Serilog.Sinks.EventLog.dll",
        "lib/net8.0/Serilog.Sinks.EventLog.xml",
        "lib/netstandard2.0/Serilog.Sinks.EventLog.dll",
        "lib/netstandard2.0/Serilog.Sinks.EventLog.xml",
        "serilog-sink-nuget.png",
        "serilog.sinks.eventlog.4.0.0.nupkg.sha512",
        "serilog.sinks.eventlog.nuspec"
      ]
    },
    "Serilog.Sinks.File/5.0.0": {
      "sha512": "uwV5hdhWPwUH1szhO8PJpFiahqXmzPzJT/sOijH/kFgUx+cyoDTMM8MHD0adw9+Iem6itoibbUXHYslzXsLEAg==",
      "type": "package",
      "path": "serilog.sinks.file/5.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "images/icon.png",
        "lib/net45/Serilog.Sinks.File.dll",
        "lib/net45/Serilog.Sinks.File.pdb",
        "lib/net45/Serilog.Sinks.File.xml",
        "lib/net5.0/Serilog.Sinks.File.dll",
        "lib/net5.0/Serilog.Sinks.File.pdb",
        "lib/net5.0/Serilog.Sinks.File.xml",
        "lib/netstandard1.3/Serilog.Sinks.File.dll",
        "lib/netstandard1.3/Serilog.Sinks.File.pdb",
        "lib/netstandard1.3/Serilog.Sinks.File.xml",
        "lib/netstandard2.0/Serilog.Sinks.File.dll",
        "lib/netstandard2.0/Serilog.Sinks.File.pdb",
        "lib/netstandard2.0/Serilog.Sinks.File.xml",
        "lib/netstandard2.1/Serilog.Sinks.File.dll",
        "lib/netstandard2.1/Serilog.Sinks.File.pdb",
        "lib/netstandard2.1/Serilog.Sinks.File.xml",
        "serilog.sinks.file.5.0.0.nupkg.sha512",
        "serilog.sinks.file.nuspec"
      ]
    },
    "System.Buffers/4.5.1": {
      "sha512": "Rw7ijyl1qqRS0YQD/WycNst8hUUMgrMH4FCn1nNm27M4VxchZ1js3fVjQaANHO5f3sN4isvP4a+Met9Y4YomAg==",
      "type": "package",
      "path": "system.buffers/4.5.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net461/System.Buffers.dll",
        "lib/net461/System.Buffers.xml",
        "lib/netcoreapp2.0/_._",
        "lib/netstandard1.1/System.Buffers.dll",
        "lib/netstandard1.1/System.Buffers.xml",
        "lib/netstandard2.0/System.Buffers.dll",
        "lib/netstandard2.0/System.Buffers.xml",
        "lib/uap10.0.16299/_._",
        "ref/net45/System.Buffers.dll",
        "ref/net45/System.Buffers.xml",
        "ref/netcoreapp2.0/_._",
        "ref/netstandard1.1/System.Buffers.dll",
        "ref/netstandard1.1/System.Buffers.xml",
        "ref/netstandard2.0/System.Buffers.dll",
        "ref/netstandard2.0/System.Buffers.xml",
        "ref/uap10.0.16299/_._",
        "system.buffers.4.5.1.nupkg.sha512",
        "system.buffers.nuspec",
        "useSharedDesignerContext.txt",
        "version.txt"
      ]
    },
    "System.Diagnostics.DiagnosticSource/9.0.5": {
      "sha512": "WoI5or8kY2VxFdDmsaRZ5yaYvvb+4MCyy66eXo79Cy1uMa7qXeGIlYmZx7R9Zy5S4xZjmqvkk2V8L6/vDwAAEA==",
      "type": "package",
      "path": "system.diagnostics.diagnosticsource/9.0.5",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Diagnostics.DiagnosticSource.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.Diagnostics.DiagnosticSource.targets",
        "lib/net462/System.Diagnostics.DiagnosticSource.dll",
        "lib/net462/System.Diagnostics.DiagnosticSource.xml",
        "lib/net8.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net8.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/net9.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net9.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.xml",
        "system.diagnostics.diagnosticsource.9.0.5.nupkg.sha512",
        "system.diagnostics.diagnosticsource.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Diagnostics.EventLog/8.0.0": {
      "sha512": "fdYxcRjQqTTacKId/2IECojlDSFvp7LP5N78+0z/xH7v/Tuw5ZAxu23Y6PTCRinqyu2ePx+Gn1098NC6jM6d+A==",
      "type": "package",
      "path": "system.diagnostics.eventlog/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Diagnostics.EventLog.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Diagnostics.EventLog.targets",
        "lib/net462/System.Diagnostics.EventLog.dll",
        "lib/net462/System.Diagnostics.EventLog.xml",
        "lib/net6.0/System.Diagnostics.EventLog.dll",
        "lib/net6.0/System.Diagnostics.EventLog.xml",
        "lib/net7.0/System.Diagnostics.EventLog.dll",
        "lib/net7.0/System.Diagnostics.EventLog.xml",
        "lib/net8.0/System.Diagnostics.EventLog.dll",
        "lib/net8.0/System.Diagnostics.EventLog.xml",
        "lib/netstandard2.0/System.Diagnostics.EventLog.dll",
        "lib/netstandard2.0/System.Diagnostics.EventLog.xml",
        "runtimes/win/lib/net6.0/System.Diagnostics.EventLog.Messages.dll",
        "runtimes/win/lib/net6.0/System.Diagnostics.EventLog.dll",
        "runtimes/win/lib/net6.0/System.Diagnostics.EventLog.xml",
        "runtimes/win/lib/net7.0/System.Diagnostics.EventLog.Messages.dll",
        "runtimes/win/lib/net7.0/System.Diagnostics.EventLog.dll",
        "runtimes/win/lib/net7.0/System.Diagnostics.EventLog.xml",
        "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.Messages.dll",
        "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.dll",
        "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.xml",
        "system.diagnostics.eventlog.8.0.0.nupkg.sha512",
        "system.diagnostics.eventlog.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Drawing.Common/8.0.10": {
      "sha512": "MdajRp3P+FOlThgY6FBjAqnmLiVl5t2yWEC/2AsDMqx1zYbJG3G5TnscFBQ4obqcaGqvN5UnhQHSFaJFG2HftQ==",
      "type": "package",
      "path": "system.drawing.common/8.0.10",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Drawing.Common.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Drawing.Common.targets",
        "lib/MonoAndroid10/_._",
        "lib/MonoTouch10/_._",
        "lib/net462/System.Drawing.Common.dll",
        "lib/net462/System.Drawing.Common.pdb",
        "lib/net462/System.Drawing.Common.xml",
        "lib/net6.0/System.Drawing.Common.dll",
        "lib/net6.0/System.Drawing.Common.pdb",
        "lib/net6.0/System.Drawing.Common.xml",
        "lib/net7.0/System.Drawing.Common.dll",
        "lib/net7.0/System.Drawing.Common.pdb",
        "lib/net7.0/System.Drawing.Common.xml",
        "lib/net8.0/System.Drawing.Common.dll",
        "lib/net8.0/System.Drawing.Common.pdb",
        "lib/net8.0/System.Drawing.Common.xml",
        "lib/netstandard2.0/System.Drawing.Common.dll",
        "lib/netstandard2.0/System.Drawing.Common.pdb",
        "lib/netstandard2.0/System.Drawing.Common.xml",
        "lib/xamarinios10/_._",
        "lib/xamarinmac20/_._",
        "lib/xamarintvos10/_._",
        "lib/xamarinwatchos10/_._",
        "system.drawing.common.8.0.10.nupkg.sha512",
        "system.drawing.common.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.ServiceProcess.ServiceController/8.0.0": {
      "sha512": "jtYVG3bpw2n/NvNnP2g/JLri0D4UtfusTvLeH6cZPNAEjJXJVGspS3wLgVvjNbm+wjaYkFgsXejMTocV1T5DIQ==",
      "type": "package",
      "path": "system.serviceprocess.servicecontroller/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.ServiceProcess.ServiceController.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.ServiceProcess.ServiceController.targets",
        "lib/net462/System.ServiceProcess.ServiceController.dll",
        "lib/net462/System.ServiceProcess.ServiceController.xml",
        "lib/net6.0/System.ServiceProcess.ServiceController.dll",
        "lib/net6.0/System.ServiceProcess.ServiceController.xml",
        "lib/net7.0/System.ServiceProcess.ServiceController.dll",
        "lib/net7.0/System.ServiceProcess.ServiceController.xml",
        "lib/net8.0/System.ServiceProcess.ServiceController.dll",
        "lib/net8.0/System.ServiceProcess.ServiceController.xml",
        "lib/netstandard2.0/System.ServiceProcess.ServiceController.dll",
        "lib/netstandard2.0/System.ServiceProcess.ServiceController.xml",
        "runtimes/win/lib/net6.0/System.ServiceProcess.ServiceController.dll",
        "runtimes/win/lib/net6.0/System.ServiceProcess.ServiceController.xml",
        "runtimes/win/lib/net7.0/System.ServiceProcess.ServiceController.dll",
        "runtimes/win/lib/net7.0/System.ServiceProcess.ServiceController.xml",
        "runtimes/win/lib/net8.0/System.ServiceProcess.ServiceController.dll",
        "runtimes/win/lib/net8.0/System.ServiceProcess.ServiceController.xml",
        "system.serviceprocess.servicecontroller.8.0.0.nupkg.sha512",
        "system.serviceprocess.servicecontroller.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Text.Encoding.CodePages/6.0.1": {
      "sha512": "OV04vEWTSDXzaAJCjylOIdjB7Z7QTYQcz4/ATZSiG8PLkZLsbtaADj0Ydj4FdFnqq4PAwEA7SuILE+6ka4cn6A==",
      "type": "package",
      "path": "system.text.encoding.codepages/6.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.Text.Encoding.CodePages.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/MonoAndroid10/_._",
        "lib/MonoTouch10/_._",
        "lib/net461/System.Text.Encoding.CodePages.dll",
        "lib/net461/System.Text.Encoding.CodePages.xml",
        "lib/net6.0/System.Text.Encoding.CodePages.dll",
        "lib/net6.0/System.Text.Encoding.CodePages.xml",
        "lib/netcoreapp3.1/System.Text.Encoding.CodePages.dll",
        "lib/netcoreapp3.1/System.Text.Encoding.CodePages.xml",
        "lib/netstandard2.0/System.Text.Encoding.CodePages.dll",
        "lib/netstandard2.0/System.Text.Encoding.CodePages.xml",
        "lib/xamarinios10/_._",
        "lib/xamarinmac20/_._",
        "lib/xamarintvos10/_._",
        "lib/xamarinwatchos10/_._",
        "runtimes/win/lib/net461/System.Text.Encoding.CodePages.dll",
        "runtimes/win/lib/net461/System.Text.Encoding.CodePages.xml",
        "runtimes/win/lib/net6.0/System.Text.Encoding.CodePages.dll",
        "runtimes/win/lib/net6.0/System.Text.Encoding.CodePages.xml",
        "runtimes/win/lib/netcoreapp3.1/System.Text.Encoding.CodePages.dll",
        "runtimes/win/lib/netcoreapp3.1/System.Text.Encoding.CodePages.xml",
        "runtimes/win/lib/netstandard2.0/System.Text.Encoding.CodePages.dll",
        "runtimes/win/lib/netstandard2.0/System.Text.Encoding.CodePages.xml",
        "system.text.encoding.codepages.6.0.1.nupkg.sha512",
        "system.text.encoding.codepages.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Text.Encodings.Web/8.0.0": {
      "sha512": "yev/k9GHAEGx2Rg3/tU6MQh4HGBXJs70y7j1LaM1i/ER9po+6nnQ6RRqTJn1E7Xu0fbIFK80Nh5EoODxrbxwBQ==",
      "type": "package",
      "path": "system.text.encodings.web/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Text.Encodings.Web.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Text.Encodings.Web.targets",
        "lib/net462/System.Text.Encodings.Web.dll",
        "lib/net462/System.Text.Encodings.Web.xml",
        "lib/net6.0/System.Text.Encodings.Web.dll",
        "lib/net6.0/System.Text.Encodings.Web.xml",
        "lib/net7.0/System.Text.Encodings.Web.dll",
        "lib/net7.0/System.Text.Encodings.Web.xml",
        "lib/net8.0/System.Text.Encodings.Web.dll",
        "lib/net8.0/System.Text.Encodings.Web.xml",
        "lib/netstandard2.0/System.Text.Encodings.Web.dll",
        "lib/netstandard2.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net6.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net6.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net7.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net7.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.xml",
        "system.text.encodings.web.8.0.0.nupkg.sha512",
        "system.text.encodings.web.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Text.Json/8.0.5": {
      "sha512": "0f1B50Ss7rqxXiaBJyzUu9bWFOO2/zSlifZ/UNMdiIpDYe4cY4LQQicP4nirK1OS31I43rn062UIJ1Q9bpmHpg==",
      "type": "package",
      "path": "system.text.json/8.0.5",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "buildTransitive/net461/System.Text.Json.targets",
        "buildTransitive/net462/System.Text.Json.targets",
        "buildTransitive/net6.0/System.Text.Json.targets",
        "buildTransitive/netcoreapp2.0/System.Text.Json.targets",
        "buildTransitive/netstandard2.0/System.Text.Json.targets",
        "lib/net462/System.Text.Json.dll",
        "lib/net462/System.Text.Json.xml",
        "lib/net6.0/System.Text.Json.dll",
        "lib/net6.0/System.Text.Json.xml",
        "lib/net7.0/System.Text.Json.dll",
        "lib/net7.0/System.Text.Json.xml",
        "lib/net8.0/System.Text.Json.dll",
        "lib/net8.0/System.Text.Json.xml",
        "lib/netstandard2.0/System.Text.Json.dll",
        "lib/netstandard2.0/System.Text.Json.xml",
        "system.text.json.8.0.5.nupkg.sha512",
        "system.text.json.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Threading.Channels/6.0.0": {
      "sha512": "TY8/9+tI0mNaUMgntOxxaq2ndTkdXqLSxvPmas7XEqOlv9lQtB7wLjYGd756lOaO7Dvb5r/WXhluM+0Xe87v5Q==",
      "type": "package",
      "path": "system.threading.channels/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.Threading.Channels.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.Threading.Channels.dll",
        "lib/net461/System.Threading.Channels.xml",
        "lib/net6.0/System.Threading.Channels.dll",
        "lib/net6.0/System.Threading.Channels.xml",
        "lib/netcoreapp3.1/System.Threading.Channels.dll",
        "lib/netcoreapp3.1/System.Threading.Channels.xml",
        "lib/netstandard2.0/System.Threading.Channels.dll",
        "lib/netstandard2.0/System.Threading.Channels.xml",
        "lib/netstandard2.1/System.Threading.Channels.dll",
        "lib/netstandard2.1/System.Threading.Channels.xml",
        "system.threading.channels.6.0.0.nupkg.sha512",
        "system.threading.channels.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "XmpCore/6.1.10.1": {
      "sha512": "/Tp2/e39e7z8hLtS4TXt0FNNZHbf5yNFfHS0/59soXlgOzZlyRZivvzWpvujyaWkTWWgecp/1nHxkuc5vntn7A==",
      "type": "package",
      "path": "xmpcore/6.1.10.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net35/XmpCore.dll",
        "lib/net35/XmpCore.xml",
        "lib/netstandard1.0/XmpCore.dll",
        "lib/netstandard1.0/XmpCore.xml",
        "lib/netstandard2.0/XmpCore.dll",
        "lib/netstandard2.0/XmpCore.xml",
        "xmpcore.6.1.10.1.nupkg.sha512",
        "xmpcore.nuspec"
      ]
    },
    "CamBridge.Core/0.7.10": {
      "type": "project",
      "path": "../CamBridge.Core/CamBridge.Core.csproj",
      "msbuildProject": "../CamBridge.Core/CamBridge.Core.csproj"
    },
    "CamBridge.Infrastructure/0.7.10": {
      "type": "project",
      "path": "../CamBridge.Infrastructure/CamBridge.Infrastructure.csproj",
      "msbuildProject": "../CamBridge.Infrastructure/CamBridge.Infrastructure.csproj"
    }
  },
  "projectFileDependencyGroups": {
    "net8.0-windows7.0": [
      "CamBridge.Core >= 0.7.10",
      "CamBridge.Infrastructure >= 0.7.10",
      "Microsoft.Extensions.Hosting.WindowsServices >= 8.0.0",
      "Serilog.AspNetCore >= 8.0.1",
      "Serilog.Sinks.Console >= 5.0.1",
      "Serilog.Sinks.EventLog >= 4.0.0",
      "Serilog.Sinks.File >= 5.0.0"
    ]
  },
  "packageFolders": {
    "C:\\Users\\oliver.stern\\.nuget\\packages\\": {},
    "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages": {}
  },
  "project": {
    "version": "0.7.10",
    "restore": {
      "projectUniqueName": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Service\\CamBridge.Service.csproj",
      "projectName": "CamBridge.Service",
      "projectPath": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Service\\CamBridge.Service.csproj",
      "packagesPath": "C:\\Users\\oliver.stern\\.nuget\\packages\\",
      "outputPath": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Service\\obj\\",
      "projectStyle": "PackageReference",
      "fallbackFolders": [
        "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
      ],
      "configFilePaths": [
        "C:\\Users\\oliver.stern\\AppData\\Roaming\\NuGet\\NuGet.Config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
      ],
      "originalTargetFrameworks": [
        "net8.0-windows"
      ],
      "sources": {
        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "projectReferences": {
            "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Core\\CamBridge.Core.csproj": {
              "projectPath": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Core\\CamBridge.Core.csproj"
            },
            "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Infrastructure\\CamBridge.Infrastructure.csproj": {
              "projectPath": "C:\\Users\\oliver.stern\\source\\repos\\CamBridge\\src\\CamBridge.Infrastructure\\CamBridge.Infrastructure.csproj"
            }
          }
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      },
      "SdkAnalysisLevel": "9.0.300"
    },
    "frameworks": {
      "net8.0-windows7.0": {
        "targetAlias": "net8.0-windows",
        "dependencies": {
          "Microsoft.Extensions.Hosting.WindowsServices": {
            "target": "Package",
            "version": "[8.0.0, )"
          },
          "Serilog.AspNetCore": {
            "target": "Package",
            "version": "[8.0.1, )"
          },
          "Serilog.Sinks.Console": {
            "target": "Package",
            "version": "[5.0.1, )"
          },
          "Serilog.Sinks.EventLog": {
            "target": "Package",
            "version": "[4.0.0, )"
          },
          "Serilog.Sinks.File": {
            "target": "Package",
            "version": "[5.0.0, )"
          }
        },
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "downloadDependencies": [
          {
            "name": "Microsoft.AspNetCore.App.Runtime.win-x64",
            "version": "[8.0.16, 8.0.16]"
          },
          {
            "name": "Microsoft.NETCore.App.Crossgen2.win-x64",
            "version": "[8.0.16, 8.0.16]"
          },
          {
            "name": "Microsoft.NETCore.App.Runtime.win-x64",
            "version": "[8.0.16, 8.0.16]"
          },
          {
            "name": "Microsoft.WindowsDesktop.App.Runtime.win-x64",
            "version": "[8.0.16, 8.0.16]"
          }
        ],
        "frameworkReferences": {
          "Microsoft.AspNetCore.App": {
            "privateAssets": "none"
          },
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          }
        },
        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.300/PortableRuntimeIdentifierGraph.json"
      }
    },
    "runtimes": {
      "win-x64": {
        "#import": []
      }
    }
  }
}

# === END OF FILE: src\CamBridge.Service\obj\project.assets.json ===


# ============================================================================
# FILE: src\CamBridge.Service\Properties\launchSettings.json
# SIZE: 0.3 KB
# MODIFIED: 2025-05-30 18:26
# ============================================================================

{
  "$schema": "http://json.schemastore.org/launchsettings.json",
  "profiles": {
    "CamBridge.Service": {
      "commandName": "Project",
      "dotnetRunMessages": true,
      "environmentVariables": {
        "DOTNET_ENVIRONMENT": "Development"
      }
    }
  }
}


# === END OF FILE: src\CamBridge.Service\Properties\launchSettings.json ===


# ============================================================================
# END OF Service SOURCES
# Total Size: 0.23 MB
# Files Included: 12
# ============================================================================
